THEORY BalanceX IS
  BIT_DEFINITION,69,39,0,30,0,0,0;
  Assertions,69,39,0,30,0,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & ss & pr;
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & eh(bit_xor,_h,Goal) & ss & pr;
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & ss & pr;
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_xor) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_xor,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_xor),_h,Goal) & pp(rt.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & ss & pr;
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & ss & pr;
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & eh(bit_or,_h,Goal) & ss & pr;
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & ss & pr;
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  pr;
  pr;
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_or) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_or,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_or),_h,Goal) & pp(rt.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & eh(bit_and,_h,Goal) & ss & pr;
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & eh(bit_and,_h,Goal) & ss & pr;
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  dd & ah(dom(bit_and) = BIT*BIT) & eh(BIT,_h,Goal) & eh(bit_and,_h,Goal) & pp(rp.0) & dd & eh(dom(bit_and),_h,Goal) & pp(rt.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
