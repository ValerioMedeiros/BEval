
THEORY ProofList IS
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.7,(_f(5086) => _f(5087));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.6,(_f(5084) => _f(5085));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.5,(_f(5082) => _f(5083));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.4,(_f(5080) => _f(5081));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.3,(_f(5078) => _f(5079));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.2,(_f(5076) => _f(5077));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(5073) & ext_RESETSubstitution.1,(_f(5074) => _f(5075));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & ext_INTPrecondition.2,(_f(5070) => _f(5071));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & ext_INTPrecondition.1,(_f(5068) => _f(5069));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.36,(_f(5066) => _f(5067));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.35,(_f(5064) => _f(5065));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.34,(_f(5062) => _f(5063));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.33,(_f(5060) => _f(5061));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.32,(_f(5058) => _f(5059));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.31,(_f(5056) => _f(5057));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.30,(_f(5054) => _f(5055));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.29,(_f(5052) => _f(5053));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.28,(_f(5050) => _f(5051));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.27,(_f(5048) => _f(5049));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.26,(_f(5046) => _f(5047));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.25,(_f(5044) => _f(5045));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.24,(_f(5042) => _f(5043));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.23,(_f(5040) => _f(5041));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.22,(_f(5038) => _f(5039));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.21,(_f(5036) => _f(5037));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.20,(_f(5034) => _f(5035));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.19,(_f(5032) => _f(5033));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.18,(_f(5030) => _f(5031));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.17,(_f(5028) => _f(5029));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.16,(_f(5026) => _f(5027));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.15,(_f(5024) => _f(5025));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.14,(_f(5022) => _f(5023));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.13,(_f(5020) => _f(5021));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.12,(_f(5018) => _f(5019));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.11,(_f(5016) => _f(5017));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.10,(_f(5014) => _f(5015));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.9,(_f(5012) => _f(5013));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.8,(_f(5010) => _f(5011));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.7,(_f(5008) => _f(5009));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.6,(_f(5006) => _f(5007));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.5,(_f(5004) => _f(5005));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.4,(_f(5002) => _f(5003));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.3,(_f(5000) => _f(5001));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.2,(_f(4998) => _f(4999));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4995) & ext_INTSubstitution.1,(_f(4996) => _f(4997));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & ext_NMIPrecondition.4,(_f(4992) => _f(4993));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & ext_NMIPrecondition.3,(_f(4990) => _f(4991));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & ext_NMIPrecondition.2,(_f(4988) => _f(4989));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & ext_NMIPrecondition.1,(_f(4986) => _f(4987));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.11,(_f(4984) => _f(4985));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.10,(_f(4982) => _f(4983));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.9,(_f(4980) => _f(4981));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.8,(_f(4978) => _f(4979));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.7,(_f(4976) => _f(4977));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.6,(_f(4974) => _f(4975));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.5,(_f(4972) => _f(4973));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.4,(_f(4970) => _f(4971));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.3,(_f(4968) => _f(4969));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.2,(_f(4966) => _f(4967));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4963) & ext_NMISubstitution.1,(_f(4964) => _f(4965));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDRPrecondition.3,(_f(4960) => _f(4961));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDRPrecondition.2,(_f(4958) => _f(4959));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDRPrecondition.1,(_f(4956) => _f(4957));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.37,(_f(4954) => _f(4955));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.36,(_f(4952) => _f(4953));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.35,(_f(4950) => _f(4951));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.34,(_f(4948) => _f(4949));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.33,(_f(4946) => _f(4947));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.32,(_f(4944) => _f(4945));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.31,(_f(4942) => _f(4943));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.30,(_f(4940) => _f(4941));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.29,(_f(4938) => _f(4939));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.28,(_f(4936) => _f(4937));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.27,(_f(4934) => _f(4935));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.26,(_f(4932) => _f(4933));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.25,(_f(4930) => _f(4931));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.24,(_f(4928) => _f(4929));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.23,(_f(4926) => _f(4927));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.22,(_f(4924) => _f(4925));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.21,(_f(4922) => _f(4923));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.20,(_f(4920) => _f(4921));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.19,(_f(4918) => _f(4919));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.18,(_f(4916) => _f(4917));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.17,(_f(4914) => _f(4915));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.16,(_f(4912) => _f(4913));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.15,(_f(4910) => _f(4911));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.14,(_f(4908) => _f(4909));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.13,(_f(4906) => _f(4907));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.12,(_f(4904) => _f(4905));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.11,(_f(4902) => _f(4903));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.10,(_f(4900) => _f(4901));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.9,(_f(4898) => _f(4899));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.8,(_f(4896) => _f(4897));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.7,(_f(4894) => _f(4895));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.6,(_f(4892) => _f(4893));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.5,(_f(4890) => _f(4891));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.4,(_f(4888) => _f(4889));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.3,(_f(4886) => _f(4887));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.2,(_f(4884) => _f(4885));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4881) & LDDRSubstitution.1,(_f(4882) => _f(4883));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDPrecondition.3,(_f(4878) => _f(4879));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDPrecondition.2,(_f(4876) => _f(4877));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDPrecondition.1,(_f(4874) => _f(4875));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.34,(_f(4872) => _f(4873));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.33,(_f(4870) => _f(4871));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.32,(_f(4868) => _f(4869));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.31,(_f(4866) => _f(4867));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.30,(_f(4864) => _f(4865));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.29,(_f(4862) => _f(4863));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.28,(_f(4860) => _f(4861));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.27,(_f(4858) => _f(4859));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.26,(_f(4856) => _f(4857));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.25,(_f(4854) => _f(4855));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.24,(_f(4852) => _f(4853));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.23,(_f(4850) => _f(4851));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.22,(_f(4848) => _f(4849));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.21,(_f(4846) => _f(4847));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.20,(_f(4844) => _f(4845));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.19,(_f(4842) => _f(4843));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.18,(_f(4840) => _f(4841));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.17,(_f(4838) => _f(4839));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.16,(_f(4836) => _f(4837));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.15,(_f(4834) => _f(4835));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.14,(_f(4832) => _f(4833));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.13,(_f(4830) => _f(4831));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.12,(_f(4828) => _f(4829));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.11,(_f(4826) => _f(4827));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.10,(_f(4824) => _f(4825));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.9,(_f(4822) => _f(4823));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.8,(_f(4820) => _f(4821));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.7,(_f(4818) => _f(4819));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.6,(_f(4816) => _f(4817));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.5,(_f(4814) => _f(4815));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.4,(_f(4812) => _f(4813));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.3,(_f(4810) => _f(4811));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.2,(_f(4808) => _f(4809));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4805) & LDDSubstitution.1,(_f(4806) => _f(4807));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIRPrecondition.3,(_f(4802) => _f(4803));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIRPrecondition.2,(_f(4800) => _f(4801));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIRPrecondition.1,(_f(4798) => _f(4799));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.37,(_f(4796) => _f(4797));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.36,(_f(4794) => _f(4795));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.35,(_f(4792) => _f(4793));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.34,(_f(4790) => _f(4791));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.33,(_f(4788) => _f(4789));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.32,(_f(4786) => _f(4787));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.31,(_f(4784) => _f(4785));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.30,(_f(4782) => _f(4783));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.29,(_f(4780) => _f(4781));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.28,(_f(4778) => _f(4779));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.27,(_f(4776) => _f(4777));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.26,(_f(4774) => _f(4775));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.25,(_f(4772) => _f(4773));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.24,(_f(4770) => _f(4771));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.23,(_f(4768) => _f(4769));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.22,(_f(4766) => _f(4767));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.21,(_f(4764) => _f(4765));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.20,(_f(4762) => _f(4763));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.19,(_f(4760) => _f(4761));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.18,(_f(4758) => _f(4759));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.17,(_f(4756) => _f(4757));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.16,(_f(4754) => _f(4755));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.15,(_f(4752) => _f(4753));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.14,(_f(4750) => _f(4751));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.13,(_f(4748) => _f(4749));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.12,(_f(4746) => _f(4747));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.11,(_f(4744) => _f(4745));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.10,(_f(4742) => _f(4743));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.9,(_f(4740) => _f(4741));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.8,(_f(4738) => _f(4739));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.7,(_f(4736) => _f(4737));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.6,(_f(4734) => _f(4735));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.5,(_f(4732) => _f(4733));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.4,(_f(4730) => _f(4731));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.3,(_f(4728) => _f(4729));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.2,(_f(4726) => _f(4727));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4723) & LDIRSubstitution.1,(_f(4724) => _f(4725));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIPrecondition.3,(_f(4720) => _f(4721));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIPrecondition.2,(_f(4718) => _f(4719));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIPrecondition.1,(_f(4716) => _f(4717));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.34,(_f(4714) => _f(4715));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.33,(_f(4712) => _f(4713));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.32,(_f(4710) => _f(4711));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.31,(_f(4708) => _f(4709));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.30,(_f(4706) => _f(4707));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.29,(_f(4704) => _f(4705));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.28,(_f(4702) => _f(4703));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.27,(_f(4700) => _f(4701));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.26,(_f(4698) => _f(4699));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.25,(_f(4696) => _f(4697));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.24,(_f(4694) => _f(4695));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.23,(_f(4692) => _f(4693));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.22,(_f(4690) => _f(4691));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.21,(_f(4688) => _f(4689));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.20,(_f(4686) => _f(4687));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.19,(_f(4684) => _f(4685));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.18,(_f(4682) => _f(4683));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.17,(_f(4680) => _f(4681));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.16,(_f(4678) => _f(4679));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.15,(_f(4676) => _f(4677));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.14,(_f(4674) => _f(4675));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.13,(_f(4672) => _f(4673));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.12,(_f(4670) => _f(4671));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.11,(_f(4668) => _f(4669));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.10,(_f(4666) => _f(4667));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.9,(_f(4664) => _f(4665));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.8,(_f(4662) => _f(4663));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.7,(_f(4660) => _f(4661));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.6,(_f(4658) => _f(4659));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.5,(_f(4656) => _f(4657));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.4,(_f(4654) => _f(4655));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.3,(_f(4652) => _f(4653));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.2,(_f(4650) => _f(4651));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4647) & LDISubstitution.1,(_f(4648) => _f(4649));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IYPrecondition.2,(_f(4644) => _f(4645));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IYPrecondition.1,(_f(4642) => _f(4643));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.7,(_f(4640) => _f(4641));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.6,(_f(4638) => _f(4639));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.5,(_f(4636) => _f(4637));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.4,(_f(4634) => _f(4635));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.3,(_f(4632) => _f(4633));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.2,(_f(4630) => _f(4631));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4627) & EX_9SP0_IYSubstitution.1,(_f(4628) => _f(4629));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IXPrecondition.2,(_f(4624) => _f(4625));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IXPrecondition.1,(_f(4622) => _f(4623));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.7,(_f(4620) => _f(4621));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.6,(_f(4618) => _f(4619));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.5,(_f(4616) => _f(4617));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.4,(_f(4614) => _f(4615));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.3,(_f(4612) => _f(4613));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.2,(_f(4610) => _f(4611));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4607) & EX_9SP0_IXSubstitution.1,(_f(4608) => _f(4609));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_HLPrecondition.2,(_f(4604) => _f(4605));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_HLPrecondition.1,(_f(4602) => _f(4603));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.10,(_f(4600) => _f(4601));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.9,(_f(4598) => _f(4599));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.8,(_f(4596) => _f(4597));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.7,(_f(4594) => _f(4595));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.6,(_f(4592) => _f(4593));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.5,(_f(4590) => _f(4591));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.4,(_f(4588) => _f(4589));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.3,(_f(4586) => _f(4587));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.2,(_f(4584) => _f(4585));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4581) & EX_9SP0_HLSubstitution.1,(_f(4582) => _f(4583));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.12,(_f(4578) => _f(4579));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.11,(_f(4576) => _f(4577));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.10,(_f(4574) => _f(4575));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.9,(_f(4572) => _f(4573));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.8,(_f(4570) => _f(4571));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.7,(_f(4568) => _f(4569));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.6,(_f(4566) => _f(4567));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.5,(_f(4564) => _f(4565));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.4,(_f(4562) => _f(4563));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.3,(_f(4560) => _f(4561));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.2,(_f(4558) => _f(4559));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4555) & EXXSubstitution.1,(_f(4556) => _f(4557));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4545) & EX_AF_AF_Substitution.4,(_f(4552) => _f(4553));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4545) & EX_AF_AF_Substitution.3,(_f(4550) => _f(4551));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4545) & EX_AF_AF_Substitution.2,(_f(4548) => _f(4549));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4545) & EX_AF_AF_Substitution.1,(_f(4546) => _f(4547));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4535) & EX_DE_HLSubstitution.4,(_f(4542) => _f(4543));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4535) & EX_DE_HLSubstitution.3,(_f(4540) => _f(4541));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4535) & EX_DE_HLSubstitution.2,(_f(4538) => _f(4539));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4535) & EX_DE_HLSubstitution.1,(_f(4536) => _f(4537));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.7,(_f(4532) => _f(4533));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.6,(_f(4530) => _f(4531));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.5,(_f(4528) => _f(4529));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.4,(_f(4526) => _f(4527));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.3,(_f(4524) => _f(4525));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.2,(_f(4522) => _f(4523));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4519) & POP_IYSubstitution.1,(_f(4520) => _f(4521));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.7,(_f(4516) => _f(4517));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.6,(_f(4514) => _f(4515));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.5,(_f(4512) => _f(4513));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.4,(_f(4510) => _f(4511));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.3,(_f(4508) => _f(4509));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.2,(_f(4506) => _f(4507));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4503) & POP_IXSubstitution.1,(_f(4504) => _f(4505));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.11,(_f(4500) => _f(4501));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.10,(_f(4498) => _f(4499));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.9,(_f(4496) => _f(4497));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.8,(_f(4494) => _f(4495));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.7,(_f(4492) => _f(4493));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.6,(_f(4490) => _f(4491));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.5,(_f(4488) => _f(4489));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.4,(_f(4486) => _f(4487));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.3,(_f(4484) => _f(4485));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.2,(_f(4482) => _f(4483));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4479) & POP_qqSubstitution.1,(_f(4480) => _f(4481));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.14,(_f(4476) => _f(4477));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.13,(_f(4474) => _f(4475));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.12,(_f(4472) => _f(4473));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.11,(_f(4470) => _f(4471));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.10,(_f(4468) => _f(4469));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.9,(_f(4466) => _f(4467));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.8,(_f(4464) => _f(4465));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.7,(_f(4462) => _f(4463));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.6,(_f(4460) => _f(4461));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.5,(_f(4458) => _f(4459));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.4,(_f(4456) => _f(4457));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.3,(_f(4454) => _f(4455));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.2,(_f(4452) => _f(4453));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4449) & PUSH_IYSubstitution.1,(_f(4450) => _f(4451));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.14,(_f(4446) => _f(4447));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.13,(_f(4444) => _f(4445));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.12,(_f(4442) => _f(4443));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.11,(_f(4440) => _f(4441));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.10,(_f(4438) => _f(4439));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.9,(_f(4436) => _f(4437));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.8,(_f(4434) => _f(4435));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.7,(_f(4432) => _f(4433));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.6,(_f(4430) => _f(4431));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.5,(_f(4428) => _f(4429));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.4,(_f(4426) => _f(4427));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.3,(_f(4424) => _f(4425));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.2,(_f(4422) => _f(4423));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4419) & PUSH_IXSubstitution.1,(_f(4420) => _f(4421));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.15,(_f(4416) => _f(4417));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.14,(_f(4414) => _f(4415));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.13,(_f(4412) => _f(4413));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.12,(_f(4410) => _f(4411));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.11,(_f(4408) => _f(4409));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.10,(_f(4406) => _f(4407));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.9,(_f(4404) => _f(4405));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.8,(_f(4402) => _f(4403));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.7,(_f(4400) => _f(4401));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.6,(_f(4398) => _f(4399));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.5,(_f(4396) => _f(4397));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.4,(_f(4394) => _f(4395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.3,(_f(4392) => _f(4393));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.2,(_f(4390) => _f(4391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4387) & PUSH_qqSubstitution.1,(_f(4388) => _f(4389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4375) & LD_SP_HLSubstitution.3,(_f(4380) => _f(4381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4375) & LD_SP_HLSubstitution.2,(_f(4378) => _f(4379));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4375) & LD_SP_HLSubstitution.1,(_f(4376) => _f(4377));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_IYPrecondition.1,(_f(4372) => _f(4373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4363) & LD_9nn0_IYSubstitution.4,(_f(4370) => _f(4371));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4363) & LD_9nn0_IYSubstitution.3,(_f(4368) => _f(4369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4363) & LD_9nn0_IYSubstitution.2,(_f(4366) => _f(4367));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4363) & LD_9nn0_IYSubstitution.1,(_f(4364) => _f(4365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_IXPrecondition.1,(_f(4360) => _f(4361));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4351) & LD_9nn0_IXSubstitution.4,(_f(4358) => _f(4359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4351) & LD_9nn0_IXSubstitution.3,(_f(4356) => _f(4357));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4351) & LD_9nn0_IXSubstitution.2,(_f(4354) => _f(4355));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4351) & LD_9nn0_IXSubstitution.1,(_f(4352) => _f(4353));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_ddPrecondition.1,(_f(4348) => _f(4349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.11,(_f(4346) => _f(4347));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.10,(_f(4344) => _f(4345));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.9,(_f(4342) => _f(4343));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.8,(_f(4340) => _f(4341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.7,(_f(4338) => _f(4339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.6,(_f(4336) => _f(4337));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.5,(_f(4334) => _f(4335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.4,(_f(4332) => _f(4333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.3,(_f(4330) => _f(4331));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.2,(_f(4328) => _f(4329));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4325) & LD_9nn0_ddSubstitution.1,(_f(4326) => _f(4327));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_HLPrecondition.1,(_f(4322) => _f(4323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.8,(_f(4320) => _f(4321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.7,(_f(4318) => _f(4319));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.6,(_f(4316) => _f(4317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.5,(_f(4314) => _f(4315));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.4,(_f(4312) => _f(4313));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.3,(_f(4310) => _f(4311));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.2,(_f(4308) => _f(4309));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4305) & LD_9nn0_HLSubstitution.1,(_f(4306) => _f(4307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4293) & LD_IY_9nn0Substitution.5,(_f(4302) => _f(4303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4293) & LD_IY_9nn0Substitution.4,(_f(4300) => _f(4301));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4293) & LD_IY_9nn0Substitution.3,(_f(4298) => _f(4299));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4293) & LD_IY_9nn0Substitution.2,(_f(4296) => _f(4297));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4293) & LD_IY_9nn0Substitution.1,(_f(4294) => _f(4295));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4281) & LD_IX_9nn0Substitution.5,(_f(4290) => _f(4291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4281) & LD_IX_9nn0Substitution.4,(_f(4288) => _f(4289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4281) & LD_IX_9nn0Substitution.3,(_f(4286) => _f(4287));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4281) & LD_IX_9nn0Substitution.2,(_f(4284) => _f(4285));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4281) & LD_IX_9nn0Substitution.1,(_f(4282) => _f(4283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.10,(_f(4278) => _f(4279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.9,(_f(4276) => _f(4277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.8,(_f(4274) => _f(4275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.7,(_f(4272) => _f(4273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.6,(_f(4270) => _f(4271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.5,(_f(4268) => _f(4269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.4,(_f(4266) => _f(4267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.3,(_f(4264) => _f(4265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.2,(_f(4262) => _f(4263));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4259) & LD_dd_9nn0Substitution.1,(_f(4260) => _f(4261));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4249) & LD_HL_9nn0Substitution.4,(_f(4256) => _f(4257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4249) & LD_HL_9nn0Substitution.3,(_f(4254) => _f(4255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4249) & LD_HL_9nn0Substitution.2,(_f(4252) => _f(4253));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4249) & LD_HL_9nn0Substitution.1,(_f(4250) => _f(4251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4239) & LD_dd_nnSubstitution.2,(_f(4242) => _f(4243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4239) & LD_dd_nnSubstitution.1,(_f(4240) => _f(4241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4235) & LD_R_ASubstitution.1,(_f(4236) => _f(4237));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4231) & LD_I_ASubstitution.1,(_f(4232) => _f(4233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4221) & LD_A_RSubstitution.4,(_f(4228) => _f(4229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4221) & LD_A_RSubstitution.3,(_f(4226) => _f(4227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4221) & LD_A_RSubstitution.2,(_f(4224) => _f(4225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4221) & LD_A_RSubstitution.1,(_f(4222) => _f(4223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4211) & LD_A_ISubstitution.4,(_f(4218) => _f(4219));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4211) & LD_A_ISubstitution.3,(_f(4216) => _f(4217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4211) & LD_A_ISubstitution.2,(_f(4214) => _f(4215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4211) & LD_A_ISubstitution.1,(_f(4212) => _f(4213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4205) & LD_9nn0_ASubstitution.2,(_f(4208) => _f(4209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4205) & LD_9nn0_ASubstitution.1,(_f(4206) => _f(4207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9DE0_APrecondition.3,(_f(4202) => _f(4203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9DE0_APrecondition.2,(_f(4200) => _f(4201));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9DE0_APrecondition.1,(_f(4198) => _f(4199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.8,(_f(4196) => _f(4197));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.7,(_f(4194) => _f(4195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.6,(_f(4192) => _f(4193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.5,(_f(4190) => _f(4191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.4,(_f(4188) => _f(4189));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.3,(_f(4186) => _f(4187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.2,(_f(4184) => _f(4185));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4181) & LD_9DE0_ASubstitution.1,(_f(4182) => _f(4183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9BC0_APrecondition.3,(_f(4178) => _f(4179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9BC0_APrecondition.2,(_f(4176) => _f(4177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9BC0_APrecondition.1,(_f(4174) => _f(4175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.8,(_f(4172) => _f(4173));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.7,(_f(4170) => _f(4171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.6,(_f(4168) => _f(4169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.5,(_f(4166) => _f(4167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.4,(_f(4164) => _f(4165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.3,(_f(4162) => _f(4163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.2,(_f(4160) => _f(4161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4157) & LD_9BC0_ASubstitution.1,(_f(4158) => _f(4159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4153) & LD_A_9nn0Substitution.1,(_f(4154) => _f(4155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4145) & LD_A_9DE0Substitution.3,(_f(4150) => _f(4151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4145) & LD_A_9DE0Substitution.2,(_f(4148) => _f(4149));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4145) & LD_A_9DE0Substitution.1,(_f(4146) => _f(4147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4137) & LD_A_9BC0Substitution.3,(_f(4142) => _f(4143));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4137) & LD_A_9BC0Substitution.2,(_f(4140) => _f(4141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4137) & LD_A_9BC0Substitution.1,(_f(4138) => _f(4139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IY_d0_nPrecondition.1,(_f(4134) => _f(4135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4125) & LD_9IY_d0_nSubstitution.4,(_f(4132) => _f(4133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4125) & LD_9IY_d0_nSubstitution.3,(_f(4130) => _f(4131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4125) & LD_9IY_d0_nSubstitution.2,(_f(4128) => _f(4129));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4125) & LD_9IY_d0_nSubstitution.1,(_f(4126) => _f(4127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IX_d0_nPrecondition.1,(_f(4122) => _f(4123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4113) & LD_9IX_d0_nSubstitution.4,(_f(4120) => _f(4121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4113) & LD_9IX_d0_nSubstitution.3,(_f(4118) => _f(4119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4113) & LD_9IX_d0_nSubstitution.2,(_f(4116) => _f(4117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4113) & LD_9IX_d0_nSubstitution.1,(_f(4114) => _f(4115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_nPrecondition.3,(_f(4110) => _f(4111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_nPrecondition.2,(_f(4108) => _f(4109));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_nPrecondition.1,(_f(4106) => _f(4107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4093) & LD_9HL0_nSubstitution.6,(_f(4104) => _f(4105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4093) & LD_9HL0_nSubstitution.5,(_f(4102) => _f(4103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4093) & LD_9HL0_nSubstitution.4,(_f(4100) => _f(4101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4093) & LD_9HL0_nSubstitution.3,(_f(4098) => _f(4099));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4093) & LD_9HL0_nSubstitution.2,(_f(4096) => _f(4097));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4093) & LD_9HL0_nSubstitution.1,(_f(4094) => _f(4095));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IY_d0_rPrecondition.1,(_f(4090) => _f(4091));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4081) & LD_9IY_d0_rSubstitution.4,(_f(4088) => _f(4089));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4081) & LD_9IY_d0_rSubstitution.3,(_f(4086) => _f(4087));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4081) & LD_9IY_d0_rSubstitution.2,(_f(4084) => _f(4085));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4081) & LD_9IY_d0_rSubstitution.1,(_f(4082) => _f(4083));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IX_d0_rPrecondition.1,(_f(4078) => _f(4079));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4069) & LD_9IX_d0_rSubstitution.4,(_f(4076) => _f(4077));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4069) & LD_9IX_d0_rSubstitution.3,(_f(4074) => _f(4075));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4069) & LD_9IX_d0_rSubstitution.2,(_f(4072) => _f(4073));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4069) & LD_9IX_d0_rSubstitution.1,(_f(4070) => _f(4071));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_rPrecondition.3,(_f(4066) => _f(4067));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_rPrecondition.2,(_f(4064) => _f(4065));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_rPrecondition.1,(_f(4062) => _f(4063));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4049) & LD_9HL0_rSubstitution.6,(_f(4060) => _f(4061));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4049) & LD_9HL0_rSubstitution.5,(_f(4058) => _f(4059));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4049) & LD_9HL0_rSubstitution.4,(_f(4056) => _f(4057));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4049) & LD_9HL0_rSubstitution.3,(_f(4054) => _f(4055));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4049) & LD_9HL0_rSubstitution.2,(_f(4052) => _f(4053));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4049) & LD_9HL0_rSubstitution.1,(_f(4050) => _f(4051));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4041) & LD_r_9IY_d0Substitution.3,(_f(4046) => _f(4047));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4041) & LD_r_9IY_d0Substitution.2,(_f(4044) => _f(4045));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4041) & LD_r_9IY_d0Substitution.1,(_f(4042) => _f(4043));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4033) & LD_r_9IX_d0Substitution.3,(_f(4038) => _f(4039));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4033) & LD_r_9IX_d0Substitution.2,(_f(4036) => _f(4037));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4033) & LD_r_9IX_d0Substitution.1,(_f(4034) => _f(4035));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4025) & LD_r_9HL0Substitution.3,(_f(4030) => _f(4031));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4025) & LD_r_9HL0Substitution.2,(_f(4028) => _f(4029));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(4025) & LD_r_9HL0Substitution.1,(_f(4026) => _f(4027));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.10,(_f(4000) => _f(4001));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.9,(_f(3998) => _f(3999));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.8,(_f(3996) => _f(3997));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.7,(_f(3994) => _f(3995));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.6,(_f(3992) => _f(3993));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.5,(_f(3990) => _f(3991));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.4,(_f(3988) => _f(3989));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.3,(_f(3986) => _f(3987));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.2,(_f(3984) => _f(3985));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3981) & SCFSubstitution.1,(_f(3982) => _f(3983));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.12,(_f(3978) => _f(3979));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.11,(_f(3976) => _f(3977));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.10,(_f(3974) => _f(3975));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.9,(_f(3972) => _f(3973));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.8,(_f(3970) => _f(3971));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.7,(_f(3968) => _f(3969));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.6,(_f(3966) => _f(3967));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.5,(_f(3964) => _f(3965));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.4,(_f(3962) => _f(3963));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.3,(_f(3960) => _f(3961));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.2,(_f(3958) => _f(3959));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3955) & CCFSubstitution.1,(_f(3956) => _f(3957));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3943) & NEGSubstitution.5,(_f(3952) => _f(3953));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3943) & NEGSubstitution.4,(_f(3950) => _f(3951));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3943) & NEGSubstitution.3,(_f(3948) => _f(3949));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3943) & NEGSubstitution.2,(_f(3946) => _f(3947));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3943) & NEGSubstitution.1,(_f(3944) => _f(3945));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.12,(_f(3940) => _f(3941));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.11,(_f(3938) => _f(3939));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.10,(_f(3936) => _f(3937));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.9,(_f(3934) => _f(3935));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.8,(_f(3932) => _f(3933));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.7,(_f(3930) => _f(3931));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.6,(_f(3928) => _f(3929));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.5,(_f(3926) => _f(3927));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.4,(_f(3924) => _f(3925));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.3,(_f(3922) => _f(3923));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.2,(_f(3920) => _f(3921));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3917) & CPLSubstitution.1,(_f(3918) => _f(3919));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.29,(_f(3914) => _f(3915));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.28,(_f(3912) => _f(3913));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.27,(_f(3910) => _f(3911));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.26,(_f(3908) => _f(3909));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.25,(_f(3906) => _f(3907));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.24,(_f(3904) => _f(3905));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.23,(_f(3902) => _f(3903));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.22,(_f(3900) => _f(3901));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.21,(_f(3898) => _f(3899));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.20,(_f(3896) => _f(3897));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.19,(_f(3894) => _f(3895));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.18,(_f(3892) => _f(3893));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.17,(_f(3890) => _f(3891));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.16,(_f(3888) => _f(3889));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.15,(_f(3886) => _f(3887));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.14,(_f(3884) => _f(3885));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.13,(_f(3882) => _f(3883));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.12,(_f(3880) => _f(3881));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.11,(_f(3878) => _f(3879));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.10,(_f(3876) => _f(3877));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.9,(_f(3874) => _f(3875));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.8,(_f(3872) => _f(3873));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.7,(_f(3870) => _f(3871));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.6,(_f(3868) => _f(3869));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.5,(_f(3866) => _f(3867));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.4,(_f(3864) => _f(3865));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.3,(_f(3862) => _f(3863));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.2,(_f(3860) => _f(3861));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3857) & CPDRSubstitution.1,(_f(3858) => _f(3859));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.21,(_f(3854) => _f(3855));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.20,(_f(3852) => _f(3853));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.19,(_f(3850) => _f(3851));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.18,(_f(3848) => _f(3849));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.17,(_f(3846) => _f(3847));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.16,(_f(3844) => _f(3845));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.15,(_f(3842) => _f(3843));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.14,(_f(3840) => _f(3841));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.13,(_f(3838) => _f(3839));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.12,(_f(3836) => _f(3837));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.11,(_f(3834) => _f(3835));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.10,(_f(3832) => _f(3833));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.9,(_f(3830) => _f(3831));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.8,(_f(3828) => _f(3829));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.7,(_f(3826) => _f(3827));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.6,(_f(3824) => _f(3825));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.5,(_f(3822) => _f(3823));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.4,(_f(3820) => _f(3821));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.3,(_f(3818) => _f(3819));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.2,(_f(3816) => _f(3817));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3813) & CPDSubstitution.1,(_f(3814) => _f(3815));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.29,(_f(3810) => _f(3811));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.28,(_f(3808) => _f(3809));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.27,(_f(3806) => _f(3807));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.26,(_f(3804) => _f(3805));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.25,(_f(3802) => _f(3803));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.24,(_f(3800) => _f(3801));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.23,(_f(3798) => _f(3799));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.22,(_f(3796) => _f(3797));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.21,(_f(3794) => _f(3795));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.20,(_f(3792) => _f(3793));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.19,(_f(3790) => _f(3791));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.18,(_f(3788) => _f(3789));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.17,(_f(3786) => _f(3787));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.16,(_f(3784) => _f(3785));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.15,(_f(3782) => _f(3783));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.14,(_f(3780) => _f(3781));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.13,(_f(3778) => _f(3779));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.12,(_f(3776) => _f(3777));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.11,(_f(3774) => _f(3775));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.10,(_f(3772) => _f(3773));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.9,(_f(3770) => _f(3771));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.8,(_f(3768) => _f(3769));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.7,(_f(3766) => _f(3767));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.6,(_f(3764) => _f(3765));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.5,(_f(3762) => _f(3763));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.4,(_f(3760) => _f(3761));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.3,(_f(3758) => _f(3759));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.2,(_f(3756) => _f(3757));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3753) & CPIRSubstitution.1,(_f(3754) => _f(3755));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.21,(_f(3750) => _f(3751));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.20,(_f(3748) => _f(3749));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.19,(_f(3746) => _f(3747));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.18,(_f(3744) => _f(3745));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.17,(_f(3742) => _f(3743));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.16,(_f(3740) => _f(3741));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.15,(_f(3738) => _f(3739));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.14,(_f(3736) => _f(3737));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.13,(_f(3734) => _f(3735));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.12,(_f(3732) => _f(3733));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.11,(_f(3730) => _f(3731));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.10,(_f(3728) => _f(3729));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.9,(_f(3726) => _f(3727));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.8,(_f(3724) => _f(3725));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.7,(_f(3722) => _f(3723));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.6,(_f(3720) => _f(3721));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.5,(_f(3718) => _f(3719));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.4,(_f(3716) => _f(3717));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.3,(_f(3714) => _f(3715));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.2,(_f(3712) => _f(3713));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3709) & CPISubstitution.1,(_f(3710) => _f(3711));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.11,(_f(3706) => _f(3707));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.10,(_f(3704) => _f(3705));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.9,(_f(3702) => _f(3703));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.8,(_f(3700) => _f(3701));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.7,(_f(3698) => _f(3699));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.6,(_f(3696) => _f(3697));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.5,(_f(3694) => _f(3695));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.4,(_f(3692) => _f(3693));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.3,(_f(3690) => _f(3691));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.2,(_f(3688) => _f(3689));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3685) & SBC_A_9IY_d0Substitution.1,(_f(3686) => _f(3687));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.11,(_f(3682) => _f(3683));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.10,(_f(3680) => _f(3681));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.9,(_f(3678) => _f(3679));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.8,(_f(3676) => _f(3677));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.7,(_f(3674) => _f(3675));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.6,(_f(3672) => _f(3673));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.5,(_f(3670) => _f(3671));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.4,(_f(3668) => _f(3669));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.3,(_f(3666) => _f(3667));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.2,(_f(3664) => _f(3665));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3661) & SBC_A_9IX_d0Substitution.1,(_f(3662) => _f(3663));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.10,(_f(3658) => _f(3659));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.9,(_f(3656) => _f(3657));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.8,(_f(3654) => _f(3655));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.7,(_f(3652) => _f(3653));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.6,(_f(3650) => _f(3651));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.5,(_f(3648) => _f(3649));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.4,(_f(3646) => _f(3647));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.3,(_f(3644) => _f(3645));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.2,(_f(3642) => _f(3643));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3639) & SBC_A_9HL0Substitution.1,(_f(3640) => _f(3641));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.7,(_f(3636) => _f(3637));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.6,(_f(3634) => _f(3635));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.5,(_f(3632) => _f(3633));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.4,(_f(3630) => _f(3631));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.3,(_f(3628) => _f(3629));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.2,(_f(3626) => _f(3627));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3623) & SBC_A_nSubstitution.1,(_f(3624) => _f(3625));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.8,(_f(3620) => _f(3621));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.7,(_f(3618) => _f(3619));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.6,(_f(3616) => _f(3617));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.5,(_f(3614) => _f(3615));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.4,(_f(3612) => _f(3613));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.3,(_f(3610) => _f(3611));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.2,(_f(3608) => _f(3609));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3605) & SBC_A_rSubstitution.1,(_f(3606) => _f(3607));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.9,(_f(3602) => _f(3603));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.8,(_f(3600) => _f(3601));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.7,(_f(3598) => _f(3599));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.6,(_f(3596) => _f(3597));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.5,(_f(3594) => _f(3595));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.4,(_f(3592) => _f(3593));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.3,(_f(3590) => _f(3591));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.2,(_f(3588) => _f(3589));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3585) & SUB_A_9IY_d0Substitution.1,(_f(3586) => _f(3587));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.9,(_f(3582) => _f(3583));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.8,(_f(3580) => _f(3581));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.7,(_f(3578) => _f(3579));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.6,(_f(3576) => _f(3577));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.5,(_f(3574) => _f(3575));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.4,(_f(3572) => _f(3573));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.3,(_f(3570) => _f(3571));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.2,(_f(3568) => _f(3569));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3565) & SUB_A_9IX_d0Substitution.1,(_f(3566) => _f(3567));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.8,(_f(3562) => _f(3563));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.7,(_f(3560) => _f(3561));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.6,(_f(3558) => _f(3559));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.5,(_f(3556) => _f(3557));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.4,(_f(3554) => _f(3555));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.3,(_f(3552) => _f(3553));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.2,(_f(3550) => _f(3551));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3547) & SUB_A_9HL0Substitution.1,(_f(3548) => _f(3549));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3535) & SUB_A_nSubstitution.5,(_f(3544) => _f(3545));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3535) & SUB_A_nSubstitution.4,(_f(3542) => _f(3543));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3535) & SUB_A_nSubstitution.3,(_f(3540) => _f(3541));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3535) & SUB_A_nSubstitution.2,(_f(3538) => _f(3539));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3535) & SUB_A_nSubstitution.1,(_f(3536) => _f(3537));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3521) & SUB_A_rSubstitution.6,(_f(3532) => _f(3533));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3521) & SUB_A_rSubstitution.5,(_f(3530) => _f(3531));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3521) & SUB_A_rSubstitution.4,(_f(3528) => _f(3529));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3521) & SUB_A_rSubstitution.3,(_f(3526) => _f(3527));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3521) & SUB_A_rSubstitution.2,(_f(3524) => _f(3525));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3521) & SUB_A_rSubstitution.1,(_f(3522) => _f(3523));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.12,(_f(3518) => _f(3519));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.11,(_f(3516) => _f(3517));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.10,(_f(3514) => _f(3515));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.9,(_f(3512) => _f(3513));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.8,(_f(3510) => _f(3511));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.7,(_f(3508) => _f(3509));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.6,(_f(3506) => _f(3507));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.5,(_f(3504) => _f(3505));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.4,(_f(3502) => _f(3503));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.3,(_f(3500) => _f(3501));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.2,(_f(3498) => _f(3499));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3495) & ADC_A_9IY_d0Substitution.1,(_f(3496) => _f(3497));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.12,(_f(3492) => _f(3493));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.11,(_f(3490) => _f(3491));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.10,(_f(3488) => _f(3489));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.9,(_f(3486) => _f(3487));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.8,(_f(3484) => _f(3485));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.7,(_f(3482) => _f(3483));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.6,(_f(3480) => _f(3481));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.5,(_f(3478) => _f(3479));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.4,(_f(3476) => _f(3477));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.3,(_f(3474) => _f(3475));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.2,(_f(3472) => _f(3473));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3469) & ADC_A_9IX_d0Substitution.1,(_f(3470) => _f(3471));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.11,(_f(3466) => _f(3467));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.10,(_f(3464) => _f(3465));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.9,(_f(3462) => _f(3463));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.8,(_f(3460) => _f(3461));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.7,(_f(3458) => _f(3459));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.6,(_f(3456) => _f(3457));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.5,(_f(3454) => _f(3455));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.4,(_f(3452) => _f(3453));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.3,(_f(3450) => _f(3451));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.2,(_f(3448) => _f(3449));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3445) & ADC_A_9HL0Substitution.1,(_f(3446) => _f(3447));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.8,(_f(3442) => _f(3443));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.7,(_f(3440) => _f(3441));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.6,(_f(3438) => _f(3439));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.5,(_f(3436) => _f(3437));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.4,(_f(3434) => _f(3435));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.3,(_f(3432) => _f(3433));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.2,(_f(3430) => _f(3431));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3427) & ADC_A_nSubstitution.1,(_f(3428) => _f(3429));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.9,(_f(3424) => _f(3425));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.8,(_f(3422) => _f(3423));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.7,(_f(3420) => _f(3421));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.6,(_f(3418) => _f(3419));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.5,(_f(3416) => _f(3417));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.4,(_f(3414) => _f(3415));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.3,(_f(3412) => _f(3413));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.2,(_f(3410) => _f(3411));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3407) & ADC_A_rSubstitution.1,(_f(3408) => _f(3409));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.10,(_f(3404) => _f(3405));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.9,(_f(3402) => _f(3403));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.8,(_f(3400) => _f(3401));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.7,(_f(3398) => _f(3399));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.6,(_f(3396) => _f(3397));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.5,(_f(3394) => _f(3395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.4,(_f(3392) => _f(3393));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.3,(_f(3390) => _f(3391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.2,(_f(3388) => _f(3389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3385) & ADD_A_9IY_d0Substitution.1,(_f(3386) => _f(3387));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.10,(_f(3382) => _f(3383));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.9,(_f(3380) => _f(3381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.8,(_f(3378) => _f(3379));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.7,(_f(3376) => _f(3377));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.6,(_f(3374) => _f(3375));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.5,(_f(3372) => _f(3373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.4,(_f(3370) => _f(3371));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.3,(_f(3368) => _f(3369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.2,(_f(3366) => _f(3367));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3363) & ADD_A_9IX_d0Substitution.1,(_f(3364) => _f(3365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.9,(_f(3360) => _f(3361));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.8,(_f(3358) => _f(3359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.7,(_f(3356) => _f(3357));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.6,(_f(3354) => _f(3355));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.5,(_f(3352) => _f(3353));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.4,(_f(3350) => _f(3351));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.3,(_f(3348) => _f(3349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.2,(_f(3346) => _f(3347));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3343) & ADD_A_9HL0Substitution.1,(_f(3344) => _f(3345));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3329) & ADD_A_nSubstitution.6,(_f(3340) => _f(3341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3329) & ADD_A_nSubstitution.5,(_f(3338) => _f(3339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3329) & ADD_A_nSubstitution.4,(_f(3336) => _f(3337));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3329) & ADD_A_nSubstitution.3,(_f(3334) => _f(3335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3329) & ADD_A_nSubstitution.2,(_f(3332) => _f(3333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3329) & ADD_A_nSubstitution.1,(_f(3330) => _f(3331));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.7,(_f(3326) => _f(3327));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.6,(_f(3324) => _f(3325));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.5,(_f(3322) => _f(3323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.4,(_f(3320) => _f(3321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.3,(_f(3318) => _f(3319));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.2,(_f(3316) => _f(3317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3313) & ADD_A_rSubstitution.1,(_f(3314) => _f(3315));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3299) & DEC_ssSubstitution.4,(_f(3306) => _f(3307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3299) & DEC_ssSubstitution.3,(_f(3304) => _f(3305));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3299) & DEC_ssSubstitution.2,(_f(3302) => _f(3303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3299) & DEC_ssSubstitution.1,(_f(3300) => _f(3301));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3285) & INC_ssSubstitution.4,(_f(3292) => _f(3293));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3285) & INC_ssSubstitution.3,(_f(3290) => _f(3291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3285) & INC_ssSubstitution.2,(_f(3288) => _f(3289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3285) & INC_ssSubstitution.1,(_f(3286) => _f(3287));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.23,(_f(3282) => _f(3283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.22,(_f(3280) => _f(3281));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.21,(_f(3278) => _f(3279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.20,(_f(3276) => _f(3277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.19,(_f(3274) => _f(3275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.18,(_f(3272) => _f(3273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.17,(_f(3270) => _f(3271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.16,(_f(3268) => _f(3269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.15,(_f(3266) => _f(3267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.14,(_f(3264) => _f(3265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.13,(_f(3262) => _f(3263));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.12,(_f(3260) => _f(3261));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.11,(_f(3258) => _f(3259));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.10,(_f(3256) => _f(3257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.9,(_f(3254) => _f(3255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.8,(_f(3252) => _f(3253));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.7,(_f(3250) => _f(3251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.6,(_f(3248) => _f(3249));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.5,(_f(3246) => _f(3247));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.4,(_f(3244) => _f(3245));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.3,(_f(3242) => _f(3243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.2,(_f(3240) => _f(3241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3237) & ADD_IY_ssSubstitution.1,(_f(3238) => _f(3239));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.23,(_f(3234) => _f(3235));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.22,(_f(3232) => _f(3233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.21,(_f(3230) => _f(3231));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.20,(_f(3228) => _f(3229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.19,(_f(3226) => _f(3227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.18,(_f(3224) => _f(3225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.17,(_f(3222) => _f(3223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.16,(_f(3220) => _f(3221));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.15,(_f(3218) => _f(3219));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.14,(_f(3216) => _f(3217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.13,(_f(3214) => _f(3215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.12,(_f(3212) => _f(3213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.11,(_f(3210) => _f(3211));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.10,(_f(3208) => _f(3209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.9,(_f(3206) => _f(3207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.8,(_f(3204) => _f(3205));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.7,(_f(3202) => _f(3203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.6,(_f(3200) => _f(3201));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.5,(_f(3198) => _f(3199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.4,(_f(3196) => _f(3197));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.3,(_f(3194) => _f(3195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.2,(_f(3192) => _f(3193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3189) & ADD_IX_ssSubstitution.1,(_f(3190) => _f(3191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.22,(_f(3186) => _f(3187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.21,(_f(3184) => _f(3185));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.20,(_f(3182) => _f(3183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.19,(_f(3180) => _f(3181));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.18,(_f(3178) => _f(3179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.17,(_f(3176) => _f(3177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.16,(_f(3174) => _f(3175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.15,(_f(3172) => _f(3173));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.14,(_f(3170) => _f(3171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.13,(_f(3168) => _f(3169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.12,(_f(3166) => _f(3167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.11,(_f(3164) => _f(3165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.10,(_f(3162) => _f(3163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.9,(_f(3160) => _f(3161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.8,(_f(3158) => _f(3159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.7,(_f(3156) => _f(3157));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.6,(_f(3154) => _f(3155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.5,(_f(3152) => _f(3153));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.4,(_f(3150) => _f(3151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.3,(_f(3148) => _f(3149));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.2,(_f(3146) => _f(3147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3143) & SBC_HL_ssSubstitution.1,(_f(3144) => _f(3145));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.22,(_f(3140) => _f(3141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.21,(_f(3138) => _f(3139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.20,(_f(3136) => _f(3137));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.19,(_f(3134) => _f(3135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.18,(_f(3132) => _f(3133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.17,(_f(3130) => _f(3131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.16,(_f(3128) => _f(3129));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.15,(_f(3126) => _f(3127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.14,(_f(3124) => _f(3125));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.13,(_f(3122) => _f(3123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.12,(_f(3120) => _f(3121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.11,(_f(3118) => _f(3119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.10,(_f(3116) => _f(3117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.9,(_f(3114) => _f(3115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.8,(_f(3112) => _f(3113));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.7,(_f(3110) => _f(3111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.6,(_f(3108) => _f(3109));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.5,(_f(3106) => _f(3107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.4,(_f(3104) => _f(3105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.3,(_f(3102) => _f(3103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.2,(_f(3100) => _f(3101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3097) & ADC_HL_ssSubstitution.1,(_f(3098) => _f(3099));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.23,(_f(3094) => _f(3095));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.22,(_f(3092) => _f(3093));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.21,(_f(3090) => _f(3091));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.20,(_f(3088) => _f(3089));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.19,(_f(3086) => _f(3087));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.18,(_f(3084) => _f(3085));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.17,(_f(3082) => _f(3083));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.16,(_f(3080) => _f(3081));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.15,(_f(3078) => _f(3079));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.14,(_f(3076) => _f(3077));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.13,(_f(3074) => _f(3075));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.12,(_f(3072) => _f(3073));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.11,(_f(3070) => _f(3071));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.10,(_f(3068) => _f(3069));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.9,(_f(3066) => _f(3067));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.8,(_f(3064) => _f(3065));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.7,(_f(3062) => _f(3063));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.6,(_f(3060) => _f(3061));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.5,(_f(3058) => _f(3059));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.4,(_f(3056) => _f(3057));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.3,(_f(3054) => _f(3055));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.2,(_f(3052) => _f(3053));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3049) & ADD_HL_ssSubstitution.1,(_f(3050) => _f(3051));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & DEC_9IY_d0Precondition.1,(_f(3046) => _f(3047));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.13,(_f(3044) => _f(3045));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.12,(_f(3042) => _f(3043));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.11,(_f(3040) => _f(3041));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.10,(_f(3038) => _f(3039));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.9,(_f(3036) => _f(3037));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.8,(_f(3034) => _f(3035));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.7,(_f(3032) => _f(3033));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.6,(_f(3030) => _f(3031));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.5,(_f(3028) => _f(3029));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.4,(_f(3026) => _f(3027));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.3,(_f(3024) => _f(3025));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.2,(_f(3022) => _f(3023));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(3019) & DEC_9IY_d0Substitution.1,(_f(3020) => _f(3021));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & DEC_9IX_d0Precondition.1,(_f(3016) => _f(3017));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.13,(_f(3014) => _f(3015));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.12,(_f(3012) => _f(3013));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.11,(_f(3010) => _f(3011));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.10,(_f(3008) => _f(3009));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.9,(_f(3006) => _f(3007));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.8,(_f(3004) => _f(3005));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.7,(_f(3002) => _f(3003));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.6,(_f(3000) => _f(3001));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.5,(_f(2998) => _f(2999));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.4,(_f(2996) => _f(2997));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.3,(_f(2994) => _f(2995));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.2,(_f(2992) => _f(2993));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2989) & DEC_9IX_d0Substitution.1,(_f(2990) => _f(2991));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & DEC_9HL0Precondition.3,(_f(2986) => _f(2987));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & DEC_9HL0Precondition.2,(_f(2984) => _f(2985));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & DEC_9HL0Precondition.1,(_f(2982) => _f(2983));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.14,(_f(2980) => _f(2981));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.13,(_f(2978) => _f(2979));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.12,(_f(2976) => _f(2977));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.11,(_f(2974) => _f(2975));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.10,(_f(2972) => _f(2973));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.9,(_f(2970) => _f(2971));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.8,(_f(2968) => _f(2969));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.7,(_f(2966) => _f(2967));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.6,(_f(2964) => _f(2965));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.5,(_f(2962) => _f(2963));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.4,(_f(2960) => _f(2961));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.3,(_f(2958) => _f(2959));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.2,(_f(2956) => _f(2957));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2953) & DEC_9HL0Substitution.1,(_f(2954) => _f(2955));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2939) & DEC_rSubstitution.6,(_f(2950) => _f(2951));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2939) & DEC_rSubstitution.5,(_f(2948) => _f(2949));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2939) & DEC_rSubstitution.4,(_f(2946) => _f(2947));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2939) & DEC_rSubstitution.3,(_f(2944) => _f(2945));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2939) & DEC_rSubstitution.2,(_f(2942) => _f(2943));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2939) & DEC_rSubstitution.1,(_f(2940) => _f(2941));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INC_9IY_d0Precondition.1,(_f(2936) => _f(2937));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.12,(_f(2934) => _f(2935));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.11,(_f(2932) => _f(2933));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.10,(_f(2930) => _f(2931));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.9,(_f(2928) => _f(2929));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.8,(_f(2926) => _f(2927));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.7,(_f(2924) => _f(2925));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.6,(_f(2922) => _f(2923));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.5,(_f(2920) => _f(2921));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.4,(_f(2918) => _f(2919));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.3,(_f(2916) => _f(2917));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.2,(_f(2914) => _f(2915));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2911) & INC_9IY_d0Substitution.1,(_f(2912) => _f(2913));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INC_9IX_d0Precondition.1,(_f(2908) => _f(2909));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.12,(_f(2906) => _f(2907));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.11,(_f(2904) => _f(2905));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.10,(_f(2902) => _f(2903));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.9,(_f(2900) => _f(2901));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.8,(_f(2898) => _f(2899));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.7,(_f(2896) => _f(2897));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.6,(_f(2894) => _f(2895));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.5,(_f(2892) => _f(2893));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.4,(_f(2890) => _f(2891));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.3,(_f(2888) => _f(2889));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.2,(_f(2886) => _f(2887));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2883) & INC_9IX_d0Substitution.1,(_f(2884) => _f(2885));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INC_9HL0Precondition.3,(_f(2880) => _f(2881));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INC_9HL0Precondition.2,(_f(2878) => _f(2879));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INC_9HL0Precondition.1,(_f(2876) => _f(2877));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.13,(_f(2874) => _f(2875));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.12,(_f(2872) => _f(2873));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.11,(_f(2870) => _f(2871));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.10,(_f(2868) => _f(2869));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.9,(_f(2866) => _f(2867));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.8,(_f(2864) => _f(2865));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.7,(_f(2862) => _f(2863));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.6,(_f(2860) => _f(2861));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.5,(_f(2858) => _f(2859));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.4,(_f(2856) => _f(2857));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.3,(_f(2854) => _f(2855));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.2,(_f(2852) => _f(2853));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2849) & INC_9HL0Substitution.1,(_f(2850) => _f(2851));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2837) & INC_rSubstitution.5,(_f(2846) => _f(2847));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2837) & INC_rSubstitution.4,(_f(2844) => _f(2845));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2837) & INC_rSubstitution.3,(_f(2842) => _f(2843));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2837) & INC_rSubstitution.2,(_f(2840) => _f(2841));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2837) & INC_rSubstitution.1,(_f(2838) => _f(2839));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.9,(_f(2834) => _f(2835));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.8,(_f(2832) => _f(2833));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.7,(_f(2830) => _f(2831));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.6,(_f(2828) => _f(2829));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.5,(_f(2826) => _f(2827));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.4,(_f(2824) => _f(2825));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.3,(_f(2822) => _f(2823));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.2,(_f(2820) => _f(2821));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2817) & CP_A_9IY_d0Substitution.1,(_f(2818) => _f(2819));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.9,(_f(2814) => _f(2815));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.8,(_f(2812) => _f(2813));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.7,(_f(2810) => _f(2811));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.6,(_f(2808) => _f(2809));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.5,(_f(2806) => _f(2807));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.4,(_f(2804) => _f(2805));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.3,(_f(2802) => _f(2803));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.2,(_f(2800) => _f(2801));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2797) & CP_A_9IX_d0Substitution.1,(_f(2798) => _f(2799));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.8,(_f(2794) => _f(2795));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.7,(_f(2792) => _f(2793));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.6,(_f(2790) => _f(2791));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.5,(_f(2788) => _f(2789));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.4,(_f(2786) => _f(2787));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.3,(_f(2784) => _f(2785));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.2,(_f(2782) => _f(2783));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2779) & CP_A_9HL0Substitution.1,(_f(2780) => _f(2781));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2767) & CP_A_nSubstitution.5,(_f(2776) => _f(2777));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2767) & CP_A_nSubstitution.4,(_f(2774) => _f(2775));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2767) & CP_A_nSubstitution.3,(_f(2772) => _f(2773));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2767) & CP_A_nSubstitution.2,(_f(2770) => _f(2771));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2767) & CP_A_nSubstitution.1,(_f(2768) => _f(2769));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2753) & CP_A_rSubstitution.6,(_f(2764) => _f(2765));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2753) & CP_A_rSubstitution.5,(_f(2762) => _f(2763));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2753) & CP_A_rSubstitution.4,(_f(2760) => _f(2761));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2753) & CP_A_rSubstitution.3,(_f(2758) => _f(2759));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2753) & CP_A_rSubstitution.2,(_f(2756) => _f(2757));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2753) & CP_A_rSubstitution.1,(_f(2754) => _f(2755));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.7,(_f(2750) => _f(2751));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.6,(_f(2748) => _f(2749));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.5,(_f(2746) => _f(2747));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.4,(_f(2744) => _f(2745));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.3,(_f(2742) => _f(2743));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.2,(_f(2740) => _f(2741));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2737) & XOR_A_9IY_d0Substitution.1,(_f(2738) => _f(2739));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.7,(_f(2734) => _f(2735));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.6,(_f(2732) => _f(2733));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.5,(_f(2730) => _f(2731));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.4,(_f(2728) => _f(2729));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.3,(_f(2726) => _f(2727));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.2,(_f(2724) => _f(2725));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2721) & XOR_A_9IX_d0Substitution.1,(_f(2722) => _f(2723));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.7,(_f(2718) => _f(2719));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.6,(_f(2716) => _f(2717));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.5,(_f(2714) => _f(2715));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.4,(_f(2712) => _f(2713));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.3,(_f(2710) => _f(2711));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.2,(_f(2708) => _f(2709));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2705) & XOR_A_9HL0Substitution.1,(_f(2706) => _f(2707));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2695) & XOR_A_nSubstitution.4,(_f(2702) => _f(2703));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2695) & XOR_A_nSubstitution.3,(_f(2700) => _f(2701));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2695) & XOR_A_nSubstitution.2,(_f(2698) => _f(2699));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2695) & XOR_A_nSubstitution.1,(_f(2696) => _f(2697));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2685) & XOR_A_rSubstitution.4,(_f(2692) => _f(2693));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2685) & XOR_A_rSubstitution.3,(_f(2690) => _f(2691));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2685) & XOR_A_rSubstitution.2,(_f(2688) => _f(2689));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2685) & XOR_A_rSubstitution.1,(_f(2686) => _f(2687));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.7,(_f(2682) => _f(2683));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.6,(_f(2680) => _f(2681));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.5,(_f(2678) => _f(2679));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.4,(_f(2676) => _f(2677));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.3,(_f(2674) => _f(2675));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.2,(_f(2672) => _f(2673));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2669) & OR_A_9IY_d0Substitution.1,(_f(2670) => _f(2671));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.7,(_f(2666) => _f(2667));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.6,(_f(2664) => _f(2665));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.5,(_f(2662) => _f(2663));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.4,(_f(2660) => _f(2661));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.3,(_f(2658) => _f(2659));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.2,(_f(2656) => _f(2657));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2653) & OR_A_9IX_d0Substitution.1,(_f(2654) => _f(2655));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.7,(_f(2650) => _f(2651));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.6,(_f(2648) => _f(2649));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.5,(_f(2646) => _f(2647));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.4,(_f(2644) => _f(2645));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.3,(_f(2642) => _f(2643));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.2,(_f(2640) => _f(2641));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2637) & OR_A_9HL0Substitution.1,(_f(2638) => _f(2639));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2627) & OR_A_nSubstitution.4,(_f(2634) => _f(2635));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2627) & OR_A_nSubstitution.3,(_f(2632) => _f(2633));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2627) & OR_A_nSubstitution.2,(_f(2630) => _f(2631));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2627) & OR_A_nSubstitution.1,(_f(2628) => _f(2629));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2617) & OR_A_rSubstitution.4,(_f(2624) => _f(2625));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2617) & OR_A_rSubstitution.3,(_f(2622) => _f(2623));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2617) & OR_A_rSubstitution.2,(_f(2620) => _f(2621));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2617) & OR_A_rSubstitution.1,(_f(2618) => _f(2619));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.7,(_f(2614) => _f(2615));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.6,(_f(2612) => _f(2613));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.5,(_f(2610) => _f(2611));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.4,(_f(2608) => _f(2609));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.3,(_f(2606) => _f(2607));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.2,(_f(2604) => _f(2605));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2601) & AND_A_9IY_d0Substitution.1,(_f(2602) => _f(2603));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.7,(_f(2598) => _f(2599));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.6,(_f(2596) => _f(2597));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.5,(_f(2594) => _f(2595));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.4,(_f(2592) => _f(2593));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.3,(_f(2590) => _f(2591));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.2,(_f(2588) => _f(2589));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2585) & AND_A_9IX_d0Substitution.1,(_f(2586) => _f(2587));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.7,(_f(2582) => _f(2583));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.6,(_f(2580) => _f(2581));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.5,(_f(2578) => _f(2579));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.4,(_f(2576) => _f(2577));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.3,(_f(2574) => _f(2575));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.2,(_f(2572) => _f(2573));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2569) & AND_A_9HL0Substitution.1,(_f(2570) => _f(2571));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2559) & AND_A_nSubstitution.4,(_f(2566) => _f(2567));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2559) & AND_A_nSubstitution.3,(_f(2564) => _f(2565));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2559) & AND_A_nSubstitution.2,(_f(2562) => _f(2563));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2559) & AND_A_nSubstitution.1,(_f(2560) => _f(2561));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2549) & AND_A_rSubstitution.4,(_f(2556) => _f(2557));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2549) & AND_A_rSubstitution.3,(_f(2554) => _f(2555));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2549) & AND_A_rSubstitution.2,(_f(2552) => _f(2553));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2549) & AND_A_rSubstitution.1,(_f(2550) => _f(2551));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RST_pPrecondition.2,(_f(2546) => _f(2547));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RST_pPrecondition.1,(_f(2544) => _f(2545));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.11,(_f(2542) => _f(2543));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.10,(_f(2540) => _f(2541));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.9,(_f(2538) => _f(2539));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.8,(_f(2536) => _f(2537));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.7,(_f(2534) => _f(2535));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.6,(_f(2532) => _f(2533));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.5,(_f(2530) => _f(2531));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.4,(_f(2528) => _f(2529));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.3,(_f(2526) => _f(2527));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.2,(_f(2524) => _f(2525));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2521) & RST_pSubstitution.1,(_f(2522) => _f(2523));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2507) & RETNSubstitution.6,(_f(2518) => _f(2519));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2507) & RETNSubstitution.5,(_f(2516) => _f(2517));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2507) & RETNSubstitution.4,(_f(2514) => _f(2515));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2507) & RETNSubstitution.3,(_f(2512) => _f(2513));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2507) & RETNSubstitution.2,(_f(2510) => _f(2511));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2507) & RETNSubstitution.1,(_f(2508) => _f(2509));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2493) & RETISubstitution.6,(_f(2504) => _f(2505));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2493) & RETISubstitution.5,(_f(2502) => _f(2503));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2493) & RETISubstitution.4,(_f(2500) => _f(2501));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2493) & RETISubstitution.3,(_f(2498) => _f(2499));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2493) & RETISubstitution.2,(_f(2496) => _f(2497));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2493) & RETISubstitution.1,(_f(2494) => _f(2495));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.8,(_f(2490) => _f(2491));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.7,(_f(2488) => _f(2489));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.6,(_f(2486) => _f(2487));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.5,(_f(2484) => _f(2485));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.4,(_f(2482) => _f(2483));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.3,(_f(2480) => _f(2481));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.2,(_f(2478) => _f(2479));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2475) & RET_ccSubstitution.1,(_f(2476) => _f(2477));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2461) & RETSubstitution.6,(_f(2472) => _f(2473));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2461) & RETSubstitution.5,(_f(2470) => _f(2471));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2461) & RETSubstitution.4,(_f(2468) => _f(2469));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2461) & RETSubstitution.3,(_f(2466) => _f(2467));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2461) & RETSubstitution.2,(_f(2464) => _f(2465));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2461) & RETSubstitution.1,(_f(2462) => _f(2463));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & CALL_cc_nnPrecondition.2,(_f(2458) => _f(2459));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & CALL_cc_nnPrecondition.1,(_f(2456) => _f(2457));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.13,(_f(2454) => _f(2455));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.12,(_f(2452) => _f(2453));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.11,(_f(2450) => _f(2451));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.10,(_f(2448) => _f(2449));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.9,(_f(2446) => _f(2447));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.8,(_f(2444) => _f(2445));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.7,(_f(2442) => _f(2443));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.6,(_f(2440) => _f(2441));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.5,(_f(2438) => _f(2439));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.4,(_f(2436) => _f(2437));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.3,(_f(2434) => _f(2435));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.2,(_f(2432) => _f(2433));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2429) & CALL_cc_nnSubstitution.1,(_f(2430) => _f(2431));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & CALL_nnPrecondition.2,(_f(2426) => _f(2427));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & CALL_nnPrecondition.1,(_f(2424) => _f(2425));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.15,(_f(2422) => _f(2423));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.14,(_f(2420) => _f(2421));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.13,(_f(2418) => _f(2419));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.12,(_f(2416) => _f(2417));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.11,(_f(2414) => _f(2415));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.10,(_f(2412) => _f(2413));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.9,(_f(2410) => _f(2411));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.8,(_f(2408) => _f(2409));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.7,(_f(2406) => _f(2407));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.6,(_f(2404) => _f(2405));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.5,(_f(2402) => _f(2403));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.4,(_f(2400) => _f(2401));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.3,(_f(2398) => _f(2399));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.2,(_f(2396) => _f(2397));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2393) & CALL_nnSubstitution.1,(_f(2394) => _f(2395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2379) & DJNZ_eSubstitution.6,(_f(2390) => _f(2391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2379) & DJNZ_eSubstitution.5,(_f(2388) => _f(2389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2379) & DJNZ_eSubstitution.4,(_f(2386) => _f(2387));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2379) & DJNZ_eSubstitution.3,(_f(2384) => _f(2385));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2379) & DJNZ_eSubstitution.2,(_f(2382) => _f(2383));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2379) & DJNZ_eSubstitution.1,(_f(2380) => _f(2381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2367) & JP_HLSubstitution.3,(_f(2372) => _f(2373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2367) & JP_HLSubstitution.2,(_f(2370) => _f(2371));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2367) & JP_HLSubstitution.1,(_f(2368) => _f(2369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2357) & JR_NZ_eSubstitution.4,(_f(2364) => _f(2365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2357) & JR_NZ_eSubstitution.3,(_f(2362) => _f(2363));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2357) & JR_NZ_eSubstitution.2,(_f(2360) => _f(2361));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2357) & JR_NZ_eSubstitution.1,(_f(2358) => _f(2359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2347) & JR_Z_eSubstitution.4,(_f(2354) => _f(2355));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2347) & JR_Z_eSubstitution.3,(_f(2352) => _f(2353));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2347) & JR_Z_eSubstitution.2,(_f(2350) => _f(2351));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2347) & JR_Z_eSubstitution.1,(_f(2348) => _f(2349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2337) & JR_NC_eSubstitution.4,(_f(2344) => _f(2345));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2337) & JR_NC_eSubstitution.3,(_f(2342) => _f(2343));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2337) & JR_NC_eSubstitution.2,(_f(2340) => _f(2341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2337) & JR_NC_eSubstitution.1,(_f(2338) => _f(2339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2327) & JR_C_eSubstitution.4,(_f(2334) => _f(2335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2327) & JR_C_eSubstitution.3,(_f(2332) => _f(2333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2327) & JR_C_eSubstitution.2,(_f(2330) => _f(2331));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2327) & JR_C_eSubstitution.1,(_f(2328) => _f(2329));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.18,(_f(2322) => _f(2323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.17,(_f(2320) => _f(2321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.16,(_f(2318) => _f(2319));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.15,(_f(2316) => _f(2317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.14,(_f(2314) => _f(2315));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.13,(_f(2312) => _f(2313));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.12,(_f(2310) => _f(2311));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.11,(_f(2308) => _f(2309));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.10,(_f(2306) => _f(2307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.9,(_f(2304) => _f(2305));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.8,(_f(2302) => _f(2303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.7,(_f(2300) => _f(2301));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.6,(_f(2298) => _f(2299));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.5,(_f(2296) => _f(2297));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.4,(_f(2294) => _f(2295));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.3,(_f(2292) => _f(2293));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.2,(_f(2290) => _f(2291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2287) & JP_cc_nnSubstitution.1,(_f(2288) => _f(2289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RES_b_9IY_d0Precondition.1,(_f(2282) => _f(2283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.10,(_f(2280) => _f(2281));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.9,(_f(2278) => _f(2279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.8,(_f(2276) => _f(2277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.7,(_f(2274) => _f(2275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.6,(_f(2272) => _f(2273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.5,(_f(2270) => _f(2271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.4,(_f(2268) => _f(2269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.3,(_f(2266) => _f(2267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.2,(_f(2264) => _f(2265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2261) & RES_b_9IY_d0Substitution.1,(_f(2262) => _f(2263));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RES_b_9IX_d0Precondition.1,(_f(2258) => _f(2259));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.10,(_f(2256) => _f(2257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.9,(_f(2254) => _f(2255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.8,(_f(2252) => _f(2253));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.7,(_f(2250) => _f(2251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.6,(_f(2248) => _f(2249));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.5,(_f(2246) => _f(2247));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.4,(_f(2244) => _f(2245));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.3,(_f(2242) => _f(2243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.2,(_f(2240) => _f(2241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2237) & RES_b_9IX_d0Substitution.1,(_f(2238) => _f(2239));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RES_b_9HL0Precondition.3,(_f(2234) => _f(2235));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RES_b_9HL0Precondition.2,(_f(2232) => _f(2233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RES_b_9HL0Precondition.1,(_f(2230) => _f(2231));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.14,(_f(2228) => _f(2229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.13,(_f(2226) => _f(2227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.12,(_f(2224) => _f(2225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.11,(_f(2222) => _f(2223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.10,(_f(2220) => _f(2221));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.9,(_f(2218) => _f(2219));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.8,(_f(2216) => _f(2217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.7,(_f(2214) => _f(2215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.6,(_f(2212) => _f(2213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.5,(_f(2210) => _f(2211));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.4,(_f(2208) => _f(2209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.3,(_f(2206) => _f(2207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.2,(_f(2204) => _f(2205));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2201) & RES_b_9HL0Substitution.1,(_f(2202) => _f(2203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2197) & RES_b_rSubstitution.1,(_f(2198) => _f(2199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SET_b_9IY_d0Precondition.1,(_f(2194) => _f(2195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.10,(_f(2192) => _f(2193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.9,(_f(2190) => _f(2191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.8,(_f(2188) => _f(2189));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.7,(_f(2186) => _f(2187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.6,(_f(2184) => _f(2185));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.5,(_f(2182) => _f(2183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.4,(_f(2180) => _f(2181));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.3,(_f(2178) => _f(2179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.2,(_f(2176) => _f(2177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2173) & SET_b_9IY_d0Substitution.1,(_f(2174) => _f(2175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SET_b_9IX_d0Precondition.1,(_f(2170) => _f(2171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.10,(_f(2168) => _f(2169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.9,(_f(2166) => _f(2167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.8,(_f(2164) => _f(2165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.7,(_f(2162) => _f(2163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.6,(_f(2160) => _f(2161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.5,(_f(2158) => _f(2159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.4,(_f(2156) => _f(2157));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.3,(_f(2154) => _f(2155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.2,(_f(2152) => _f(2153));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2149) & SET_b_9IX_d0Substitution.1,(_f(2150) => _f(2151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SET_b_9HL0Precondition.3,(_f(2146) => _f(2147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SET_b_9HL0Precondition.2,(_f(2144) => _f(2145));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SET_b_9HL0Precondition.1,(_f(2142) => _f(2143));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.14,(_f(2140) => _f(2141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.13,(_f(2138) => _f(2139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.12,(_f(2136) => _f(2137));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.11,(_f(2134) => _f(2135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.10,(_f(2132) => _f(2133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.9,(_f(2130) => _f(2131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.8,(_f(2128) => _f(2129));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.7,(_f(2126) => _f(2127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.6,(_f(2124) => _f(2125));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.5,(_f(2122) => _f(2123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.4,(_f(2120) => _f(2121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.3,(_f(2118) => _f(2119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.2,(_f(2116) => _f(2117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2113) & SET_b_9HL0Substitution.1,(_f(2114) => _f(2115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2109) & SET_b_rSubstitution.1,(_f(2110) => _f(2111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.13,(_f(2106) => _f(2107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.12,(_f(2104) => _f(2105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.11,(_f(2102) => _f(2103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.10,(_f(2100) => _f(2101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.9,(_f(2098) => _f(2099));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.8,(_f(2096) => _f(2097));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.7,(_f(2094) => _f(2095));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.6,(_f(2092) => _f(2093));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.5,(_f(2090) => _f(2091));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.4,(_f(2088) => _f(2089));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.3,(_f(2086) => _f(2087));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.2,(_f(2084) => _f(2085));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2081) & BIT_b_9IY_d0Substitution.1,(_f(2082) => _f(2083));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.13,(_f(2078) => _f(2079));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.12,(_f(2076) => _f(2077));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.11,(_f(2074) => _f(2075));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.10,(_f(2072) => _f(2073));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.9,(_f(2070) => _f(2071));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.8,(_f(2068) => _f(2069));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.7,(_f(2066) => _f(2067));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.6,(_f(2064) => _f(2065));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.5,(_f(2062) => _f(2063));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.4,(_f(2060) => _f(2061));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.3,(_f(2058) => _f(2059));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.2,(_f(2056) => _f(2057));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2053) & BIT_b_9IX_d0Substitution.1,(_f(2054) => _f(2055));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.13,(_f(2050) => _f(2051));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.12,(_f(2048) => _f(2049));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.11,(_f(2046) => _f(2047));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.10,(_f(2044) => _f(2045));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.9,(_f(2042) => _f(2043));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.8,(_f(2040) => _f(2041));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.7,(_f(2038) => _f(2039));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.6,(_f(2036) => _f(2037));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.5,(_f(2034) => _f(2035));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.4,(_f(2032) => _f(2033));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.3,(_f(2030) => _f(2031));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.2,(_f(2028) => _f(2029));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2025) & BIT_b_9HL0Substitution.1,(_f(2026) => _f(2027));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.10,(_f(2022) => _f(2023));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.9,(_f(2020) => _f(2021));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.8,(_f(2018) => _f(2019));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.7,(_f(2016) => _f(2017));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.6,(_f(2014) => _f(2015));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.5,(_f(2012) => _f(2013));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.4,(_f(2010) => _f(2011));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.3,(_f(2008) => _f(2009));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.2,(_f(2006) => _f(2007));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(2003) & BIT_b_rrSubstitution.1,(_f(2004) => _f(2005));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRDPrecondition.3,(_f(2000) => _f(2001));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRDPrecondition.2,(_f(1998) => _f(1999));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRDPrecondition.1,(_f(1996) => _f(1997));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.51,(_f(1994) => _f(1995));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.50,(_f(1992) => _f(1993));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.49,(_f(1990) => _f(1991));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.48,(_f(1988) => _f(1989));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.47,(_f(1986) => _f(1987));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.46,(_f(1984) => _f(1985));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.45,(_f(1982) => _f(1983));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.44,(_f(1980) => _f(1981));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.43,(_f(1978) => _f(1979));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.42,(_f(1976) => _f(1977));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.41,(_f(1974) => _f(1975));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.40,(_f(1972) => _f(1973));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.39,(_f(1970) => _f(1971));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.38,(_f(1968) => _f(1969));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.37,(_f(1966) => _f(1967));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.36,(_f(1964) => _f(1965));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.35,(_f(1962) => _f(1963));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.34,(_f(1960) => _f(1961));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.33,(_f(1958) => _f(1959));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.32,(_f(1956) => _f(1957));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.31,(_f(1954) => _f(1955));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.30,(_f(1952) => _f(1953));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.29,(_f(1950) => _f(1951));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.28,(_f(1948) => _f(1949));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.27,(_f(1946) => _f(1947));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.26,(_f(1944) => _f(1945));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.25,(_f(1942) => _f(1943));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.24,(_f(1940) => _f(1941));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.23,(_f(1938) => _f(1939));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.22,(_f(1936) => _f(1937));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.21,(_f(1934) => _f(1935));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.20,(_f(1932) => _f(1933));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.19,(_f(1930) => _f(1931));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.18,(_f(1928) => _f(1929));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.17,(_f(1926) => _f(1927));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.16,(_f(1924) => _f(1925));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.15,(_f(1922) => _f(1923));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.14,(_f(1920) => _f(1921));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.13,(_f(1918) => _f(1919));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.12,(_f(1916) => _f(1917));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.11,(_f(1914) => _f(1915));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.10,(_f(1912) => _f(1913));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.9,(_f(1910) => _f(1911));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.8,(_f(1908) => _f(1909));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.7,(_f(1906) => _f(1907));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.6,(_f(1904) => _f(1905));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.5,(_f(1902) => _f(1903));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.4,(_f(1900) => _f(1901));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.3,(_f(1898) => _f(1899));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.2,(_f(1896) => _f(1897));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1893) & RRDSubstitution.1,(_f(1894) => _f(1895));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLDPrecondition.3,(_f(1890) => _f(1891));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLDPrecondition.2,(_f(1888) => _f(1889));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLDPrecondition.1,(_f(1886) => _f(1887));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.51,(_f(1884) => _f(1885));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.50,(_f(1882) => _f(1883));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.49,(_f(1880) => _f(1881));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.48,(_f(1878) => _f(1879));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.47,(_f(1876) => _f(1877));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.46,(_f(1874) => _f(1875));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.45,(_f(1872) => _f(1873));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.44,(_f(1870) => _f(1871));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.43,(_f(1868) => _f(1869));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.42,(_f(1866) => _f(1867));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.41,(_f(1864) => _f(1865));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.40,(_f(1862) => _f(1863));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.39,(_f(1860) => _f(1861));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.38,(_f(1858) => _f(1859));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.37,(_f(1856) => _f(1857));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.36,(_f(1854) => _f(1855));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.35,(_f(1852) => _f(1853));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.34,(_f(1850) => _f(1851));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.33,(_f(1848) => _f(1849));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.32,(_f(1846) => _f(1847));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.31,(_f(1844) => _f(1845));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.30,(_f(1842) => _f(1843));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.29,(_f(1840) => _f(1841));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.28,(_f(1838) => _f(1839));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.27,(_f(1836) => _f(1837));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.26,(_f(1834) => _f(1835));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.25,(_f(1832) => _f(1833));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.24,(_f(1830) => _f(1831));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.23,(_f(1828) => _f(1829));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.22,(_f(1826) => _f(1827));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.21,(_f(1824) => _f(1825));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.20,(_f(1822) => _f(1823));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.19,(_f(1820) => _f(1821));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.18,(_f(1818) => _f(1819));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.17,(_f(1816) => _f(1817));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.16,(_f(1814) => _f(1815));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.15,(_f(1812) => _f(1813));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.14,(_f(1810) => _f(1811));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.13,(_f(1808) => _f(1809));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.12,(_f(1806) => _f(1807));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.11,(_f(1804) => _f(1805));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.10,(_f(1802) => _f(1803));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.9,(_f(1800) => _f(1801));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.8,(_f(1798) => _f(1799));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.7,(_f(1796) => _f(1797));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.6,(_f(1794) => _f(1795));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.5,(_f(1792) => _f(1793));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.4,(_f(1790) => _f(1791));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.3,(_f(1788) => _f(1789));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.2,(_f(1786) => _f(1787));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1783) & RLDSubstitution.1,(_f(1784) => _f(1785));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRL_9IY_d0Precondition.1,(_f(1780) => _f(1781));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.14,(_f(1778) => _f(1779));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.13,(_f(1776) => _f(1777));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.12,(_f(1774) => _f(1775));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.11,(_f(1772) => _f(1773));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.10,(_f(1770) => _f(1771));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.9,(_f(1768) => _f(1769));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.8,(_f(1766) => _f(1767));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.7,(_f(1764) => _f(1765));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.6,(_f(1762) => _f(1763));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.5,(_f(1760) => _f(1761));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.4,(_f(1758) => _f(1759));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.3,(_f(1756) => _f(1757));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.2,(_f(1754) => _f(1755));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1751) & SRL_9IY_d0Substitution.1,(_f(1752) => _f(1753));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRL_9IX_d0Precondition.1,(_f(1748) => _f(1749));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.14,(_f(1746) => _f(1747));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.13,(_f(1744) => _f(1745));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.12,(_f(1742) => _f(1743));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.11,(_f(1740) => _f(1741));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.10,(_f(1738) => _f(1739));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.9,(_f(1736) => _f(1737));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.8,(_f(1734) => _f(1735));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.7,(_f(1732) => _f(1733));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.6,(_f(1730) => _f(1731));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.5,(_f(1728) => _f(1729));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.4,(_f(1726) => _f(1727));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.3,(_f(1724) => _f(1725));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.2,(_f(1722) => _f(1723));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1719) & SRL_9IX_d0Substitution.1,(_f(1720) => _f(1721));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRL_9HL0Precondition.3,(_f(1716) => _f(1717));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRL_9HL0Precondition.2,(_f(1714) => _f(1715));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRL_9HL0Precondition.1,(_f(1712) => _f(1713));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.16,(_f(1710) => _f(1711));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.15,(_f(1708) => _f(1709));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.14,(_f(1706) => _f(1707));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.13,(_f(1704) => _f(1705));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.12,(_f(1702) => _f(1703));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.11,(_f(1700) => _f(1701));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.10,(_f(1698) => _f(1699));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.9,(_f(1696) => _f(1697));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.8,(_f(1694) => _f(1695));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.7,(_f(1692) => _f(1693));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.6,(_f(1690) => _f(1691));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.5,(_f(1688) => _f(1689));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.4,(_f(1686) => _f(1687));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.3,(_f(1684) => _f(1685));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.2,(_f(1682) => _f(1683));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1679) & SRL_9HL0Substitution.1,(_f(1680) => _f(1681));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1667) & SRL_rSubstitution.5,(_f(1676) => _f(1677));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1667) & SRL_rSubstitution.4,(_f(1674) => _f(1675));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1667) & SRL_rSubstitution.3,(_f(1672) => _f(1673));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1667) & SRL_rSubstitution.2,(_f(1670) => _f(1671));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1667) & SRL_rSubstitution.1,(_f(1668) => _f(1669));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRA_9IY_d0Precondition.1,(_f(1664) => _f(1665));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.18,(_f(1662) => _f(1663));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.17,(_f(1660) => _f(1661));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.16,(_f(1658) => _f(1659));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.15,(_f(1656) => _f(1657));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.14,(_f(1654) => _f(1655));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.13,(_f(1652) => _f(1653));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.12,(_f(1650) => _f(1651));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.11,(_f(1648) => _f(1649));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.10,(_f(1646) => _f(1647));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.9,(_f(1644) => _f(1645));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.8,(_f(1642) => _f(1643));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.7,(_f(1640) => _f(1641));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.6,(_f(1638) => _f(1639));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.5,(_f(1636) => _f(1637));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.4,(_f(1634) => _f(1635));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.3,(_f(1632) => _f(1633));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.2,(_f(1630) => _f(1631));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1627) & SRA_9IY_d0Substitution.1,(_f(1628) => _f(1629));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRA_9IX_d0Precondition.1,(_f(1624) => _f(1625));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.17,(_f(1622) => _f(1623));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.16,(_f(1620) => _f(1621));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.15,(_f(1618) => _f(1619));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.14,(_f(1616) => _f(1617));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.13,(_f(1614) => _f(1615));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.12,(_f(1612) => _f(1613));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.11,(_f(1610) => _f(1611));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.10,(_f(1608) => _f(1609));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.9,(_f(1606) => _f(1607));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.8,(_f(1604) => _f(1605));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.7,(_f(1602) => _f(1603));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.6,(_f(1600) => _f(1601));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.5,(_f(1598) => _f(1599));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.4,(_f(1596) => _f(1597));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.3,(_f(1594) => _f(1595));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.2,(_f(1592) => _f(1593));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1589) & SRA_9IX_d0Substitution.1,(_f(1590) => _f(1591));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRA_9HL0Precondition.3,(_f(1586) => _f(1587));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRA_9HL0Precondition.2,(_f(1584) => _f(1585));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SRA_9HL0Precondition.1,(_f(1582) => _f(1583));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.20,(_f(1580) => _f(1581));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.19,(_f(1578) => _f(1579));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.18,(_f(1576) => _f(1577));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.17,(_f(1574) => _f(1575));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.16,(_f(1572) => _f(1573));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.15,(_f(1570) => _f(1571));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.14,(_f(1568) => _f(1569));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.13,(_f(1566) => _f(1567));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.12,(_f(1564) => _f(1565));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.11,(_f(1562) => _f(1563));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.10,(_f(1560) => _f(1561));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.9,(_f(1558) => _f(1559));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.8,(_f(1556) => _f(1557));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.7,(_f(1554) => _f(1555));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.6,(_f(1552) => _f(1553));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.5,(_f(1550) => _f(1551));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.4,(_f(1548) => _f(1549));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.3,(_f(1546) => _f(1547));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.2,(_f(1544) => _f(1545));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1541) & SRA_9HL0Substitution.1,(_f(1542) => _f(1543));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SLA_9HL0Precondition.3,(_f(1538) => _f(1539));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SLA_9HL0Precondition.2,(_f(1536) => _f(1537));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & SLA_9HL0Precondition.1,(_f(1534) => _f(1535));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.17,(_f(1532) => _f(1533));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.16,(_f(1530) => _f(1531));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.15,(_f(1528) => _f(1529));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.14,(_f(1526) => _f(1527));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.13,(_f(1524) => _f(1525));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.12,(_f(1522) => _f(1523));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.11,(_f(1520) => _f(1521));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.10,(_f(1518) => _f(1519));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.9,(_f(1516) => _f(1517));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.8,(_f(1514) => _f(1515));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.7,(_f(1512) => _f(1513));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.6,(_f(1510) => _f(1511));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.5,(_f(1508) => _f(1509));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.4,(_f(1506) => _f(1507));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.3,(_f(1504) => _f(1505));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.2,(_f(1502) => _f(1503));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1499) & SLA_9HL0Substitution.1,(_f(1500) => _f(1501));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1485) & SLA_rSubstitution.6,(_f(1496) => _f(1497));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1485) & SLA_rSubstitution.5,(_f(1494) => _f(1495));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1485) & SLA_rSubstitution.4,(_f(1492) => _f(1493));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1485) & SLA_rSubstitution.3,(_f(1490) => _f(1491));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1485) & SLA_rSubstitution.2,(_f(1488) => _f(1489));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1485) & SLA_rSubstitution.1,(_f(1486) => _f(1487));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RR_9IY_d0Precondition.1,(_f(1482) => _f(1483));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.15,(_f(1480) => _f(1481));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.14,(_f(1478) => _f(1479));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.13,(_f(1476) => _f(1477));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.12,(_f(1474) => _f(1475));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.11,(_f(1472) => _f(1473));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.10,(_f(1470) => _f(1471));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.9,(_f(1468) => _f(1469));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.8,(_f(1466) => _f(1467));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.7,(_f(1464) => _f(1465));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.6,(_f(1462) => _f(1463));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.5,(_f(1460) => _f(1461));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.4,(_f(1458) => _f(1459));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.3,(_f(1456) => _f(1457));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.2,(_f(1454) => _f(1455));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1451) & RR_9IY_d0Substitution.1,(_f(1452) => _f(1453));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RR_9IX_d0Precondition.1,(_f(1448) => _f(1449));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.15,(_f(1446) => _f(1447));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.14,(_f(1444) => _f(1445));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.13,(_f(1442) => _f(1443));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.12,(_f(1440) => _f(1441));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.11,(_f(1438) => _f(1439));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.10,(_f(1436) => _f(1437));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.9,(_f(1434) => _f(1435));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.8,(_f(1432) => _f(1433));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.7,(_f(1430) => _f(1431));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.6,(_f(1428) => _f(1429));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.5,(_f(1426) => _f(1427));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.4,(_f(1424) => _f(1425));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.3,(_f(1422) => _f(1423));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.2,(_f(1420) => _f(1421));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1417) & RR_9IX_d0Substitution.1,(_f(1418) => _f(1419));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RR_9HLPrecondition.3,(_f(1414) => _f(1415));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RR_9HLPrecondition.2,(_f(1412) => _f(1413));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RR_9HLPrecondition.1,(_f(1410) => _f(1411));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.17,(_f(1408) => _f(1409));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.16,(_f(1406) => _f(1407));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.15,(_f(1404) => _f(1405));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.14,(_f(1402) => _f(1403));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.13,(_f(1400) => _f(1401));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.12,(_f(1398) => _f(1399));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.11,(_f(1396) => _f(1397));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.10,(_f(1394) => _f(1395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.9,(_f(1392) => _f(1393));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.8,(_f(1390) => _f(1391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.7,(_f(1388) => _f(1389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.6,(_f(1386) => _f(1387));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.5,(_f(1384) => _f(1385));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.4,(_f(1382) => _f(1383));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.3,(_f(1380) => _f(1381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.2,(_f(1378) => _f(1379));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1375) & RR_9HLSubstitution.1,(_f(1376) => _f(1377));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1361) & RR_rSubstitution.6,(_f(1372) => _f(1373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1361) & RR_rSubstitution.5,(_f(1370) => _f(1371));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1361) & RR_rSubstitution.4,(_f(1368) => _f(1369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1361) & RR_rSubstitution.3,(_f(1366) => _f(1367));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1361) & RR_rSubstitution.2,(_f(1364) => _f(1365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1361) & RR_rSubstitution.1,(_f(1362) => _f(1363));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRC_9IY_d0Precondition.1,(_f(1358) => _f(1359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.13,(_f(1356) => _f(1357));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.12,(_f(1354) => _f(1355));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.11,(_f(1352) => _f(1353));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.10,(_f(1350) => _f(1351));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.9,(_f(1348) => _f(1349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.8,(_f(1346) => _f(1347));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.7,(_f(1344) => _f(1345));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.6,(_f(1342) => _f(1343));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.5,(_f(1340) => _f(1341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.4,(_f(1338) => _f(1339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.3,(_f(1336) => _f(1337));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.2,(_f(1334) => _f(1335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1331) & RRC_9IY_d0Substitution.1,(_f(1332) => _f(1333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRC_9IX_d0Precondition.1,(_f(1328) => _f(1329));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.13,(_f(1326) => _f(1327));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.12,(_f(1324) => _f(1325));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.11,(_f(1322) => _f(1323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.10,(_f(1320) => _f(1321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.9,(_f(1318) => _f(1319));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.8,(_f(1316) => _f(1317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.7,(_f(1314) => _f(1315));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.6,(_f(1312) => _f(1313));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.5,(_f(1310) => _f(1311));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.4,(_f(1308) => _f(1309));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.3,(_f(1306) => _f(1307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.2,(_f(1304) => _f(1305));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1301) & RRC_9IX_d0Substitution.1,(_f(1302) => _f(1303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRC_9HL0Precondition.3,(_f(1298) => _f(1299));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRC_9HL0Precondition.2,(_f(1296) => _f(1297));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RRC_9HL0Precondition.1,(_f(1294) => _f(1295));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.15,(_f(1292) => _f(1293));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.14,(_f(1290) => _f(1291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.13,(_f(1288) => _f(1289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.12,(_f(1286) => _f(1287));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.11,(_f(1284) => _f(1285));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.10,(_f(1282) => _f(1283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.9,(_f(1280) => _f(1281));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.8,(_f(1278) => _f(1279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.7,(_f(1276) => _f(1277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.6,(_f(1274) => _f(1275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.5,(_f(1272) => _f(1273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.4,(_f(1270) => _f(1271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.3,(_f(1268) => _f(1269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.2,(_f(1266) => _f(1267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1263) & RRC_9HL0Substitution.1,(_f(1264) => _f(1265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1253) & RRC_rSubstitution.4,(_f(1260) => _f(1261));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1253) & RRC_rSubstitution.3,(_f(1258) => _f(1259));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1253) & RRC_rSubstitution.2,(_f(1256) => _f(1257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1253) & RRC_rSubstitution.1,(_f(1254) => _f(1255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RL_9IY_d0Precondition.1,(_f(1250) => _f(1251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.15,(_f(1248) => _f(1249));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.14,(_f(1246) => _f(1247));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.13,(_f(1244) => _f(1245));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.12,(_f(1242) => _f(1243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.11,(_f(1240) => _f(1241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.10,(_f(1238) => _f(1239));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.9,(_f(1236) => _f(1237));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.8,(_f(1234) => _f(1235));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.7,(_f(1232) => _f(1233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.6,(_f(1230) => _f(1231));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.5,(_f(1228) => _f(1229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.4,(_f(1226) => _f(1227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.3,(_f(1224) => _f(1225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.2,(_f(1222) => _f(1223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1219) & RL_9IY_d0Substitution.1,(_f(1220) => _f(1221));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RL_9IX_d0Precondition.1,(_f(1216) => _f(1217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.15,(_f(1214) => _f(1215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.14,(_f(1212) => _f(1213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.13,(_f(1210) => _f(1211));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.12,(_f(1208) => _f(1209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.11,(_f(1206) => _f(1207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.10,(_f(1204) => _f(1205));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.9,(_f(1202) => _f(1203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.8,(_f(1200) => _f(1201));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.7,(_f(1198) => _f(1199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.6,(_f(1196) => _f(1197));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.5,(_f(1194) => _f(1195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.4,(_f(1192) => _f(1193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.3,(_f(1190) => _f(1191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.2,(_f(1188) => _f(1189));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1185) & RL_9IX_d0Substitution.1,(_f(1186) => _f(1187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RL_9HLPrecondition.3,(_f(1182) => _f(1183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RL_9HLPrecondition.2,(_f(1180) => _f(1181));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RL_9HLPrecondition.1,(_f(1178) => _f(1179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.17,(_f(1176) => _f(1177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.16,(_f(1174) => _f(1175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.15,(_f(1172) => _f(1173));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.14,(_f(1170) => _f(1171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.13,(_f(1168) => _f(1169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.12,(_f(1166) => _f(1167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.11,(_f(1164) => _f(1165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.10,(_f(1162) => _f(1163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.9,(_f(1160) => _f(1161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.8,(_f(1158) => _f(1159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.7,(_f(1156) => _f(1157));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.6,(_f(1154) => _f(1155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.5,(_f(1152) => _f(1153));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.4,(_f(1150) => _f(1151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.3,(_f(1148) => _f(1149));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.2,(_f(1146) => _f(1147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1143) & RL_9HLSubstitution.1,(_f(1144) => _f(1145));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1129) & RL_rSubstitution.6,(_f(1140) => _f(1141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1129) & RL_rSubstitution.5,(_f(1138) => _f(1139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1129) & RL_rSubstitution.4,(_f(1136) => _f(1137));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1129) & RL_rSubstitution.3,(_f(1134) => _f(1135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1129) & RL_rSubstitution.2,(_f(1132) => _f(1133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1129) & RL_rSubstitution.1,(_f(1130) => _f(1131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9IY_d0Precondition.3,(_f(1126) => _f(1127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9IY_d0Precondition.2,(_f(1124) => _f(1125));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9IY_d0Precondition.1,(_f(1122) => _f(1123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.13,(_f(1120) => _f(1121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.12,(_f(1118) => _f(1119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.11,(_f(1116) => _f(1117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.10,(_f(1114) => _f(1115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.9,(_f(1112) => _f(1113));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.8,(_f(1110) => _f(1111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.7,(_f(1108) => _f(1109));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.6,(_f(1106) => _f(1107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.5,(_f(1104) => _f(1105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.4,(_f(1102) => _f(1103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.3,(_f(1100) => _f(1101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.2,(_f(1098) => _f(1099));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1095) & RLC_9IY_d0Substitution.1,(_f(1096) => _f(1097));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9IX_d0Precondition.3,(_f(1092) => _f(1093));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9IX_d0Precondition.2,(_f(1090) => _f(1091));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9IX_d0Precondition.1,(_f(1088) => _f(1089));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.13,(_f(1086) => _f(1087));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.12,(_f(1084) => _f(1085));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.11,(_f(1082) => _f(1083));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.10,(_f(1080) => _f(1081));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.9,(_f(1078) => _f(1079));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.8,(_f(1076) => _f(1077));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.7,(_f(1074) => _f(1075));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.6,(_f(1072) => _f(1073));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.5,(_f(1070) => _f(1071));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.4,(_f(1068) => _f(1069));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.3,(_f(1066) => _f(1067));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.2,(_f(1064) => _f(1065));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1061) & RLC_9IX_d0Substitution.1,(_f(1062) => _f(1063));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9HL0Precondition.3,(_f(1058) => _f(1059));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9HL0Precondition.2,(_f(1056) => _f(1057));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & RLC_9HL0Precondition.1,(_f(1054) => _f(1055));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.15,(_f(1052) => _f(1053));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.14,(_f(1050) => _f(1051));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.13,(_f(1048) => _f(1049));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.12,(_f(1046) => _f(1047));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.11,(_f(1044) => _f(1045));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.10,(_f(1042) => _f(1043));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.9,(_f(1040) => _f(1041));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.8,(_f(1038) => _f(1039));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.7,(_f(1036) => _f(1037));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.6,(_f(1034) => _f(1035));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.5,(_f(1032) => _f(1033));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.4,(_f(1030) => _f(1031));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.3,(_f(1028) => _f(1029));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.2,(_f(1026) => _f(1027));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1023) & RLC_9HL0Substitution.1,(_f(1024) => _f(1025));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & RLC_rSubstitution.4,(_f(1020) => _f(1021));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & RLC_rSubstitution.3,(_f(1018) => _f(1019));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & RLC_rSubstitution.2,(_f(1016) => _f(1017));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & RLC_rSubstitution.1,(_f(1014) => _f(1015));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.14,(_f(1010) => _f(1011));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.13,(_f(1008) => _f(1009));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.12,(_f(1006) => _f(1007));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.11,(_f(1004) => _f(1005));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.10,(_f(1002) => _f(1003));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.9,(_f(1000) => _f(1001));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.8,(_f(998) => _f(999));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.7,(_f(996) => _f(997));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.6,(_f(994) => _f(995));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.5,(_f(992) => _f(993));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.4,(_f(990) => _f(991));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.3,(_f(988) => _f(989));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.2,(_f(986) => _f(987));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(983) & RRASubstitution.1,(_f(984) => _f(985));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.12,(_f(980) => _f(981));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.11,(_f(978) => _f(979));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.10,(_f(976) => _f(977));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.9,(_f(974) => _f(975));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.8,(_f(972) => _f(973));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.7,(_f(970) => _f(971));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.6,(_f(968) => _f(969));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.5,(_f(966) => _f(967));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.4,(_f(964) => _f(965));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.3,(_f(962) => _f(963));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.2,(_f(960) => _f(961));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(957) & RRCASubstitution.1,(_f(958) => _f(959));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.14,(_f(954) => _f(955));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.13,(_f(952) => _f(953));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.12,(_f(950) => _f(951));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.11,(_f(948) => _f(949));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.10,(_f(946) => _f(947));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.9,(_f(944) => _f(945));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.8,(_f(942) => _f(943));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.7,(_f(940) => _f(941));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.6,(_f(938) => _f(939));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.5,(_f(936) => _f(937));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.4,(_f(934) => _f(935));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.3,(_f(932) => _f(933));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.2,(_f(930) => _f(931));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(927) & RLASubstitution.1,(_f(928) => _f(929));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.12,(_f(924) => _f(925));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.11,(_f(922) => _f(923));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.10,(_f(920) => _f(921));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.9,(_f(918) => _f(919));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.8,(_f(916) => _f(917));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.7,(_f(914) => _f(915));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.6,(_f(912) => _f(913));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.5,(_f(910) => _f(911));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.4,(_f(908) => _f(909));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.3,(_f(906) => _f(907));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.2,(_f(904) => _f(905));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(901) & RLCASubstitution.1,(_f(902) => _f(903));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.37,(_f(898) => _f(899));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.36,(_f(896) => _f(897));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.35,(_f(894) => _f(895));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.34,(_f(892) => _f(893));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.33,(_f(890) => _f(891));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.32,(_f(888) => _f(889));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.31,(_f(886) => _f(887));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.30,(_f(884) => _f(885));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.29,(_f(882) => _f(883));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.28,(_f(880) => _f(881));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.27,(_f(878) => _f(879));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.26,(_f(876) => _f(877));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.25,(_f(874) => _f(875));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.24,(_f(872) => _f(873));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.23,(_f(870) => _f(871));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.22,(_f(868) => _f(869));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.21,(_f(866) => _f(867));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.20,(_f(864) => _f(865));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.19,(_f(862) => _f(863));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.18,(_f(860) => _f(861));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.17,(_f(858) => _f(859));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.16,(_f(856) => _f(857));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.15,(_f(854) => _f(855));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.14,(_f(852) => _f(853));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.13,(_f(850) => _f(851));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.12,(_f(848) => _f(849));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.11,(_f(846) => _f(847));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.10,(_f(844) => _f(845));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.9,(_f(842) => _f(843));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.8,(_f(840) => _f(841));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.7,(_f(838) => _f(839));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.6,(_f(836) => _f(837));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.5,(_f(834) => _f(835));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.4,(_f(832) => _f(833));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.3,(_f(830) => _f(831));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.2,(_f(828) => _f(829));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(825) & OUTDRSubstitution.1,(_f(826) => _f(827));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.33,(_f(822) => _f(823));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.32,(_f(820) => _f(821));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.31,(_f(818) => _f(819));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.30,(_f(816) => _f(817));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.29,(_f(814) => _f(815));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.28,(_f(812) => _f(813));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.27,(_f(810) => _f(811));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.26,(_f(808) => _f(809));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.25,(_f(806) => _f(807));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.24,(_f(804) => _f(805));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.23,(_f(802) => _f(803));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.22,(_f(800) => _f(801));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.21,(_f(798) => _f(799));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.20,(_f(796) => _f(797));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.19,(_f(794) => _f(795));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.18,(_f(792) => _f(793));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.17,(_f(790) => _f(791));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.16,(_f(788) => _f(789));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.15,(_f(786) => _f(787));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.14,(_f(784) => _f(785));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.13,(_f(782) => _f(783));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.12,(_f(780) => _f(781));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.11,(_f(778) => _f(779));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.10,(_f(776) => _f(777));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.9,(_f(774) => _f(775));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.8,(_f(772) => _f(773));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.7,(_f(770) => _f(771));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.6,(_f(768) => _f(769));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.5,(_f(766) => _f(767));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.4,(_f(764) => _f(765));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.3,(_f(762) => _f(763));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.2,(_f(760) => _f(761));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & OUTDSubstitution.1,(_f(758) => _f(759));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.37,(_f(754) => _f(755));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.36,(_f(752) => _f(753));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.35,(_f(750) => _f(751));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.34,(_f(748) => _f(749));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.33,(_f(746) => _f(747));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.32,(_f(744) => _f(745));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.31,(_f(742) => _f(743));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.30,(_f(740) => _f(741));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.29,(_f(738) => _f(739));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.28,(_f(736) => _f(737));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.27,(_f(734) => _f(735));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.26,(_f(732) => _f(733));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.25,(_f(730) => _f(731));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.24,(_f(728) => _f(729));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.23,(_f(726) => _f(727));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.22,(_f(724) => _f(725));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.21,(_f(722) => _f(723));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.20,(_f(720) => _f(721));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.19,(_f(718) => _f(719));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.18,(_f(716) => _f(717));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.17,(_f(714) => _f(715));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.16,(_f(712) => _f(713));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.15,(_f(710) => _f(711));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.14,(_f(708) => _f(709));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.13,(_f(706) => _f(707));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.12,(_f(704) => _f(705));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.11,(_f(702) => _f(703));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.10,(_f(700) => _f(701));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.9,(_f(698) => _f(699));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.8,(_f(696) => _f(697));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.7,(_f(694) => _f(695));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.6,(_f(692) => _f(693));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.5,(_f(690) => _f(691));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.4,(_f(688) => _f(689));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.3,(_f(686) => _f(687));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.2,(_f(684) => _f(685));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(681) & OUTIRSubstitution.1,(_f(682) => _f(683));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.33,(_f(678) => _f(679));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.32,(_f(676) => _f(677));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.31,(_f(674) => _f(675));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.30,(_f(672) => _f(673));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.29,(_f(670) => _f(671));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.28,(_f(668) => _f(669));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.27,(_f(666) => _f(667));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.26,(_f(664) => _f(665));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.25,(_f(662) => _f(663));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.24,(_f(660) => _f(661));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.23,(_f(658) => _f(659));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.22,(_f(656) => _f(657));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.21,(_f(654) => _f(655));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.20,(_f(652) => _f(653));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.19,(_f(650) => _f(651));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.18,(_f(648) => _f(649));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.17,(_f(646) => _f(647));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.16,(_f(644) => _f(645));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.15,(_f(642) => _f(643));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.14,(_f(640) => _f(641));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.13,(_f(638) => _f(639));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.12,(_f(636) => _f(637));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.11,(_f(634) => _f(635));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.10,(_f(632) => _f(633));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.9,(_f(630) => _f(631));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.8,(_f(628) => _f(629));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.7,(_f(626) => _f(627));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.6,(_f(624) => _f(625));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.5,(_f(622) => _f(623));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.4,(_f(620) => _f(621));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.3,(_f(618) => _f(619));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.2,(_f(616) => _f(617));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(613) & OUTISubstitution.1,(_f(614) => _f(615));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(609) & OUT_9C0_rSubstitution.1,(_f(610) => _f(611));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(605) & OUT_9n0_ASubstitution.1,(_f(606) => _f(607));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INDRPrecondition.3,(_f(602) => _f(603));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INDRPrecondition.2,(_f(600) => _f(601));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INDRPrecondition.1,(_f(598) => _f(599));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.31,(_f(596) => _f(597));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.30,(_f(594) => _f(595));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.29,(_f(592) => _f(593));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.28,(_f(590) => _f(591));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.27,(_f(588) => _f(589));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.26,(_f(586) => _f(587));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.25,(_f(584) => _f(585));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.24,(_f(582) => _f(583));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.23,(_f(580) => _f(581));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.22,(_f(578) => _f(579));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.21,(_f(576) => _f(577));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.20,(_f(574) => _f(575));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.19,(_f(572) => _f(573));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.18,(_f(570) => _f(571));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.17,(_f(568) => _f(569));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.16,(_f(566) => _f(567));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.15,(_f(564) => _f(565));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.14,(_f(562) => _f(563));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.13,(_f(560) => _f(561));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.12,(_f(558) => _f(559));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.11,(_f(556) => _f(557));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.10,(_f(554) => _f(555));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.9,(_f(552) => _f(553));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.8,(_f(550) => _f(551));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.7,(_f(548) => _f(549));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.6,(_f(546) => _f(547));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.5,(_f(544) => _f(545));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.4,(_f(542) => _f(543));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.3,(_f(540) => _f(541));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.2,(_f(538) => _f(539));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(535) & INDRSubstitution.1,(_f(536) => _f(537));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INDPrecondition.3,(_f(532) => _f(533));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INDPrecondition.2,(_f(530) => _f(531));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INDPrecondition.1,(_f(528) => _f(529));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.27,(_f(526) => _f(527));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.26,(_f(524) => _f(525));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.25,(_f(522) => _f(523));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.24,(_f(520) => _f(521));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.23,(_f(518) => _f(519));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.22,(_f(516) => _f(517));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.21,(_f(514) => _f(515));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.20,(_f(512) => _f(513));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.19,(_f(510) => _f(511));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.18,(_f(508) => _f(509));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.17,(_f(506) => _f(507));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.16,(_f(504) => _f(505));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.15,(_f(502) => _f(503));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.14,(_f(500) => _f(501));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.13,(_f(498) => _f(499));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.12,(_f(496) => _f(497));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.11,(_f(494) => _f(495));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.10,(_f(492) => _f(493));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.9,(_f(490) => _f(491));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.8,(_f(488) => _f(489));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.7,(_f(486) => _f(487));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.6,(_f(484) => _f(485));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.5,(_f(482) => _f(483));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.4,(_f(480) => _f(481));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.3,(_f(478) => _f(479));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.2,(_f(476) => _f(477));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(473) & INDSubstitution.1,(_f(474) => _f(475));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INIRPrecondition.3,(_f(470) => _f(471));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INIRPrecondition.2,(_f(468) => _f(469));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INIRPrecondition.1,(_f(466) => _f(467));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.29,(_f(464) => _f(465));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.28,(_f(462) => _f(463));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.27,(_f(460) => _f(461));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.26,(_f(458) => _f(459));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.25,(_f(456) => _f(457));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.24,(_f(454) => _f(455));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.23,(_f(452) => _f(453));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.22,(_f(450) => _f(451));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.21,(_f(448) => _f(449));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.20,(_f(446) => _f(447));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.19,(_f(444) => _f(445));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.18,(_f(442) => _f(443));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.17,(_f(440) => _f(441));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.16,(_f(438) => _f(439));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.15,(_f(436) => _f(437));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.14,(_f(434) => _f(435));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.13,(_f(432) => _f(433));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.12,(_f(430) => _f(431));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.11,(_f(428) => _f(429));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.10,(_f(426) => _f(427));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.9,(_f(424) => _f(425));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.8,(_f(422) => _f(423));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.7,(_f(420) => _f(421));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.6,(_f(418) => _f(419));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.5,(_f(416) => _f(417));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.4,(_f(414) => _f(415));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.3,(_f(412) => _f(413));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.2,(_f(410) => _f(411));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(407) & INIRSubstitution.1,(_f(408) => _f(409));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INIPrecondition.3,(_f(404) => _f(405));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INIPrecondition.2,(_f(402) => _f(403));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & INIPrecondition.1,(_f(400) => _f(401));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.27,(_f(398) => _f(399));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.26,(_f(396) => _f(397));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.25,(_f(394) => _f(395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.24,(_f(392) => _f(393));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.23,(_f(390) => _f(391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.22,(_f(388) => _f(389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.21,(_f(386) => _f(387));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.20,(_f(384) => _f(385));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.19,(_f(382) => _f(383));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.18,(_f(380) => _f(381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.17,(_f(378) => _f(379));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.16,(_f(376) => _f(377));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.15,(_f(374) => _f(375));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.14,(_f(372) => _f(373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.13,(_f(370) => _f(371));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.12,(_f(368) => _f(369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.11,(_f(366) => _f(367));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.10,(_f(364) => _f(365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.9,(_f(362) => _f(363));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.8,(_f(360) => _f(361));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.7,(_f(358) => _f(359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.6,(_f(356) => _f(357));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.5,(_f(354) => _f(355));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.4,(_f(352) => _f(353));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.3,(_f(350) => _f(351));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.2,(_f(348) => _f(349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(345) & INISubstitution.1,(_f(346) => _f(347));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.12,(_f(342) => _f(343));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.11,(_f(340) => _f(341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.10,(_f(338) => _f(339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.9,(_f(336) => _f(337));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.8,(_f(334) => _f(335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.7,(_f(332) => _f(333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.6,(_f(330) => _f(331));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.5,(_f(328) => _f(329));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.4,(_f(326) => _f(327));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.3,(_f(324) => _f(325));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.2,(_f(322) => _f(323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(319) & IN_r_9C0Substitution.1,(_f(320) => _f(321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(315) & IN_A_9n0Substitution.1,(_f(316) => _f(317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.118,(_f(310) => _f(311));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.117,(_f(308) => _f(309));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.116,(_f(306) => _f(307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.115,(_f(304) => _f(305));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.114,(_f(302) => _f(303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.113,(_f(300) => _f(301));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.112,(_f(298) => _f(299));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.111,(_f(296) => _f(297));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.110,(_f(294) => _f(295));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.109,(_f(292) => _f(293));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.108,(_f(290) => _f(291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.107,(_f(288) => _f(289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.106,(_f(286) => _f(287));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.105,(_f(284) => _f(285));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.104,(_f(282) => _f(283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.103,(_f(280) => _f(281));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.102,(_f(278) => _f(279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.101,(_f(276) => _f(277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.100,(_f(274) => _f(275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.99,(_f(272) => _f(273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.98,(_f(270) => _f(271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.97,(_f(268) => _f(269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.96,(_f(266) => _f(267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.95,(_f(264) => _f(265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.94,(_f(262) => _f(263));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.93,(_f(260) => _f(261));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.92,(_f(258) => _f(259));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.91,(_f(256) => _f(257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.90,(_f(254) => _f(255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.89,(_f(252) => _f(253));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.88,(_f(250) => _f(251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.87,(_f(248) => _f(249));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.86,(_f(246) => _f(247));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.85,(_f(244) => _f(245));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.84,(_f(242) => _f(243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.83,(_f(240) => _f(241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.82,(_f(238) => _f(239));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.81,(_f(236) => _f(237));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.80,(_f(234) => _f(235));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.79,(_f(232) => _f(233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.78,(_f(230) => _f(231));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.77,(_f(228) => _f(229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.76,(_f(226) => _f(227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.75,(_f(224) => _f(225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.74,(_f(222) => _f(223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.73,(_f(220) => _f(221));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.72,(_f(218) => _f(219));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.71,(_f(216) => _f(217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.70,(_f(214) => _f(215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.69,(_f(212) => _f(213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.68,(_f(210) => _f(211));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.67,(_f(208) => _f(209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.66,(_f(206) => _f(207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.65,(_f(204) => _f(205));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.64,(_f(202) => _f(203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.63,(_f(200) => _f(201));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.62,(_f(198) => _f(199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.61,(_f(196) => _f(197));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.60,(_f(194) => _f(195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.59,(_f(192) => _f(193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.58,(_f(190) => _f(191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.57,(_f(188) => _f(189));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.56,(_f(186) => _f(187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.55,(_f(184) => _f(185));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.54,(_f(182) => _f(183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.53,(_f(180) => _f(181));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.52,(_f(178) => _f(179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.51,(_f(176) => _f(177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.50,(_f(174) => _f(175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.49,(_f(172) => _f(173));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.48,(_f(170) => _f(171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.47,(_f(168) => _f(169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.46,(_f(166) => _f(167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.45,(_f(164) => _f(165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.44,(_f(162) => _f(163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.43,(_f(160) => _f(161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.42,(_f(158) => _f(159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.41,(_f(156) => _f(157));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.40,(_f(154) => _f(155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.39,(_f(152) => _f(153));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.38,(_f(150) => _f(151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.37,(_f(148) => _f(149));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.36,(_f(146) => _f(147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.35,(_f(144) => _f(145));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.34,(_f(142) => _f(143));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.33,(_f(140) => _f(141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.32,(_f(138) => _f(139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.31,(_f(136) => _f(137));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.30,(_f(134) => _f(135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.29,(_f(132) => _f(133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.28,(_f(130) => _f(131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.27,(_f(128) => _f(129));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.26,(_f(126) => _f(127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.25,(_f(124) => _f(125));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.24,(_f(122) => _f(123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.23,(_f(120) => _f(121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.22,(_f(118) => _f(119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.21,(_f(116) => _f(117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.20,(_f(114) => _f(115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.19,(_f(112) => _f(113));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.18,(_f(110) => _f(111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.17,(_f(108) => _f(109));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.16,(_f(106) => _f(107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.15,(_f(104) => _f(105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.14,(_f(102) => _f(103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.13,(_f(100) => _f(101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.12,(_f(98) => _f(99));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.11,(_f(96) => _f(97));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.10,(_f(94) => _f(95));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.9,(_f(92) => _f(93));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.8,(_f(90) => _f(91));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.7,(_f(88) => _f(89));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.6,(_f(86) => _f(87));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.5,(_f(84) => _f(85));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.4,(_f(82) => _f(83));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.3,(_f(80) => _f(81));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.2,(_f(78) => _f(79));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.1,(_f(76) => _f(77));
_f(5) & _f(4) & Properties.32,(_f(74) => _f(75));
_f(5) & _f(4) & Properties.31,(_f(72) => _f(73));
_f(5) & _f(4) & Properties.30,(_f(70) => _f(71));
_f(5) & _f(4) & Properties.29,(_f(68) => _f(69));
_f(5) & _f(4) & Properties.28,(_f(66) => _f(67));
_f(5) & _f(4) & Properties.27,(_f(64) => _f(65));
_f(5) & _f(4) & Properties.26,(_f(62) => _f(63));
_f(5) & _f(4) & Properties.25,(_f(60) => _f(61));
_f(5) & _f(4) & Properties.24,(_f(58) => _f(59));
_f(5) & _f(4) & Properties.23,(_f(56) => _f(57));
_f(5) & _f(4) & Properties.22,(_f(54) => _f(55));
_f(5) & _f(4) & Properties.21,(_f(52) => _f(53));
_f(5) & _f(4) & Properties.20,(_f(50) => _f(51));
_f(5) & _f(4) & Properties.19,(_f(48) => _f(49));
_f(5) & _f(4) & Properties.18,(_f(46) => _f(47));
_f(5) & _f(4) & Properties.17,(_f(44) => _f(45));
_f(5) & _f(4) & Properties.16,(_f(42) => _f(43));
_f(5) & _f(4) & Properties.15,(_f(40) => _f(41));
_f(5) & _f(4) & Properties.14,(_f(38) => _f(39));
_f(5) & _f(4) & Properties.13,(_f(36) => _f(37));
_f(5) & _f(4) & Properties.12,(_f(34) => _f(35));
_f(5) & _f(4) & Properties.11,(_f(32) => _f(33));
_f(5) & _f(4) & Properties.10,(_f(30) => _f(31));
_f(5) & _f(4) & Properties.9,(_f(28) => _f(29));
_f(5) & _f(4) & Properties.8,(_f(26) => _f(27));
_f(5) & _f(4) & Properties.7,(_f(24) => _f(25));
_f(5) & _f(4) & Properties.6,(_f(22) => _f(23));
_f(5) & _f(4) & Properties.5,(_f(20) => _f(21));
_f(5) & _f(4) & Properties.4,(_f(18) => _f(19));
_f(5) & _f(4) & Properties.3,(_f(16) => _f(17));
_f(5) & _f(4) & Properties.2,(_f(14) => _f(15));
_f(5) & _f(4) & Properties.1,(_f(12) => _f(13))

END
&

THEORY Formulas IS
("`Component constraints'" & btrue);
("`Used machines constraints'" & btrue);
("`Component properties'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & get_bv_reg16 = %(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 1|->id_reg_16 | byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8)))\/%(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 2|->id_reg_16 | byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8)))\/%(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 3|->id_reg_16 | byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8)))\/%(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 4|->id_reg_16 | sp_)\/%(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 5|->id_reg_16 | byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8))));
("`Seen and used machines properties'" & is_zero16USHORT = %nat1.(nat1: USHORT | bool_bit(bool(nat1 = 0))) & is_negative = %w1.(w1: BYTE | w1(7)) & half8UCHAR = %ww.(ww: UCHAR | ww mod 16) & inc = %w1.(w1: BYTE | uchar_byte((byte_uchar(w1)+1) mod 256)) & dec = %w1.(w1: BYTE | uchar_byte((byte_uchar(w1)+255) mod 256)) & simple_add8UCHAR = %(w1,w2).(w1: UCHAR & w2: UCHAR | (w1+w2) mod 256) & add8UCHAR = %(carry,w1,w2).(carry: BIT & w1: UCHAR & w2: UCHAR | (carry+w1+w2) mod 256,bool_bit(bool(carry+uchar_schar(w1)+uchar_schar(w2)+1<=0)),bool_bit(bool(UCHAR_MAX+1<=carry+w1+w2)),bool_bit(bool(16<=carry+half8UCHAR(w1)+half8UCHAR(w2))),bool_bit(bool((carry+w1+w2) mod 256 = 0))) & substract8UCHAR = %(carry,w1,w2).(carry: BIT & w1: UCHAR & w2: UCHAR | (carry+w1+(256-w2)) mod 256,bool_bit(bool(carry+uchar_schar(w1)-uchar_schar(w2)+1<=0)),bool_bit(bool(UCHAR_MAX+1<=carry+w1-w2)),bool_bit(bool(16<=carry+half8UCHAR(w1)-half8UCHAR(w2))),bool_bit(bool((carry+w1+(256-w2)) mod 256 = 0))) & add16USHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | (b1+w1+w2) mod 65536) & add_carryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(65536<=b1+w1+w2))) & add_halfcarryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(4097<=b1+w1 mod 4096+w2 mod 4096))) & sub16USHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | (b1+w1+(65536-w2)) mod 65536) & sub_carryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(65537<=w1+w2-b1))) & sub_halfcarryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(4097<=w1 mod 4096+w2 mod 4096-b1))) & inc_BV16 = %w1.(w1: BV16 | ushort_bv16((bv16_ushort(w1)+1) mod 65536)) & dec_BV16 = %w1.(w1: BV16 | ushort_bv16((bv16_ushort(w1)+65536-1) mod 65536)) & update_refresh_reg = %v0.(v0: BYTE | uchar_byte(128*v0(8)+(64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)) mod 128)) & instruction_next = %w1.(w1: USHORT | (w1+1) mod 65536) & instruction_jump = %(p0,e0).(p0: USHORT & e0: -126..129 | (p0+e0+65536) mod 65536) & BIT = {0}\/{1} & bit_not: BIT +-> BIT & bit_not~: BIT +-> BIT & dom(bit_not) = BIT & ran(bit_not) = BIT & bit_not = {0|->1}\/{1|->0} & bit_and: BIT*BIT +-> BIT & dom(bit_and) = BIT*BIT & bit_and = {(0,0)|->0}\/{(0,1)|->0}\/{(1,0)|->0}\/{(1,1)|->1} & bit_or: BIT*BIT +-> BIT & dom(bit_or) = BIT*BIT & bit_or = {(0,0)|->0}\/{(0,1)|->1}\/{(1,0)|->1}\/{(1,1)|->1} & bit_xor: BIT*BIT +-> BIT & dom(bit_xor) = BIT*BIT & bit_xor = {(0,0)|->0}\/{(0,1)|->1}\/{(1,0)|->1}\/{(1,1)|->0} & bool_bit = {TRUE|->1}\/{FALSE|->0} & BYTE_INDEX = 1..8 & PHYS_BYTE_INDEX = 0..7 & BYTE = BYTE_INDEX --> BIT & !b1.(b1: BYTE => size(b1) = 8 & b1: seq(BIT) & not(b1 = {})) & is_zero: BYTE +-> BIT & dom(is_zero) = BYTE & is_zero = %w1.(w1: BYTE | bool_bit(bool(w1(1) = w1(2) & w1(2) = w1(3) & w1(3) = w1(4) & w1(4) = w1(5) & w1(5) = w1(6) & w1(6) = w1(7) & w1(7) = w1(8) & w1(8) = 0))) & parity_even: BYTE +-> BIT & dom(parity_even) = BYTE & parity_even = %bv.(bv: BYTE | 1-(bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8)) mod 2) & bv8_and = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | %idx.(idx: 1..8 | bit_and(bt1(idx),bt2(idx)))) & bv8_or = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | %idx.(idx: 1..8 | bit_or(bt1(idx),bt2(idx)))) & bv8_xor = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | %idx.(idx: 1..8 | bit_xor(bt1(idx),bt2(idx)))) & bv8get: BYTE*PHYS_BYTE_INDEX +-> BIT & dom(bv8get) = BYTE*PHYS_BYTE_INDEX & bv8get = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1(ii+1)) & bitset: BYTE*PHYS_BYTE_INDEX +-> BYTE & dom(bitset) = BYTE*PHYS_BYTE_INDEX & bitset = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1<+{ii+1|->1}) & bitclear: BYTE*PHYS_BYTE_INDEX +-> BYTE & dom(bitclear) = BYTE*PHYS_BYTE_INDEX & bitclear = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1<+{ii+1|->0}) & complement: BYTE +-> BYTE & dom(complement) = BYTE & complement = %bt.(bt: BYTE | %idx.(idx: 1..8 | bit_not(bt(idx)))) & swap: BYTE +-> BYTE & dom(swap) = BYTE & swap = %bt.(bt: BYTE | {1|->bt(5)}\/{2|->bt(6)}\/{3|->bt(7)}\/{4|->bt(8)}\/{5|->bt(1)}\/{6|->bt(2)}\/{7|->bt(3)}\/{8|->bt(4)}) & rotateleft: BYTE +-> BYTE & dom(rotateleft) = BYTE & rotateleft = %bv.(bv: BYTE | {1|->bv(8)}\/{2|->bv(1)}\/{3|->bv(2)}\/{4|->bv(3)}\/{5|->bv(4)}\/{6|->bv(5)}\/{7|->bv(6)}\/{8|->bv(7)}) & rotateright: BYTE +-> BYTE & dom(rotateright) = BYTE & rotateright = %bv.(bv: BYTE | {1|->bv(2)}\/{2|->bv(3)}\/{3|->bv(4)}\/{4|->bv(5)}\/{5|->bv(6)}\/{6|->bv(7)}\/{7|->bv(8)}\/{8|->bv(1)}) & get_upper_digit: BYTE +-> 0..15 & dom(get_upper_digit) = BYTE & get_upper_digit = %by.(by: BYTE | 8*by(8)+4*by(7)+2*by(6)+by(5)) & get_lower_digit: BYTE +-> 0..15 & dom(get_lower_digit) = BYTE & get_lower_digit = %by.(by: BYTE | 8*by(4)+4*by(3)+2*by(2)+by(1)) & BV16_INDX = 1..16 & PHYS_BV16_INDEX = 0..15 & BV16 = BV16_INDX --> BIT & !b1.(b1: BV16 => size(b1) = 16 & b1: seq(BIT) & not(b1 = {})) & complement16 = %bt.(bt: BV16 | %idx.(idx: 1..16 | bit_not(bt(idx)))) & bv16_byte = %bv.(bv: BV16 | {8|->bv(16)}\/{7|->bv(15)}\/{6|->bv(14)}\/{5|->bv(13)}\/{4|->bv(12)}\/{3|->bv(11)}\/{2|->bv(10)}\/{1|->bv(9)},{8|->bv(8)}\/{7|->bv(7)}\/{6|->bv(6)}\/{5|->bv(5)}\/{4|->bv(4)}\/{3|->bv(3)}\/{2|->bv(2)}\/{1|->bv(1)}) & byte_bv16 = %(bv1,bv2).(bv1: BYTE & bv2: BYTE | {16|->bv1(8)}\/{15|->bv1(7)}\/{14|->bv1(6)}\/{13|->bv1(5)}\/{12|->bv1(4)}\/{11|->bv1(3)}\/{10|->bv1(2)}\/{9|->bv1(1)}\/{8|->bv2(8)}\/{7|->bv2(7)}\/{6|->bv2(6)}\/{5|->bv2(5)}\/{4|->bv2(4)}\/{3|->bv2(3)}\/{2|->bv2(2)}\/{1|->bv2(1)}) & UCHAR_MAX = 255 & UCHAR_MIN = 0 & UCHAR = UCHAR_MIN..UCHAR_MAX & byte_uchar = %v0.(v0: BYTE | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) & uchar_byte = %v0.(v0: UCHAR | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]) & SCHAR_MAX = 127 & SCHAR_MIN = -128 & SCHAR = SCHAR_MIN..SCHAR_MAX & byte_schar = %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)) & schar_byte = %v0.(v0: SCHAR & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128])\/%v0.(v0: SCHAR & not(0<=v0) | [(v0+256) mod 2/1,(v0+256) mod 4/2,(v0+256) mod 8/4,(v0+256) mod 16/8,(v0+256) mod 32/16,(v0+256) mod 64/32,(v0+256) mod 128/64,(v0+256) mod 256/128]) & uchar_schar = %v1.(v1: UCHAR & v1<=SCHAR_MAX | v1)\/%v1.(v1: UCHAR & not(v1<=SCHAR_MAX) | v1-256) & schar_uchar = %v1.(v1: 0..127 | v1)\/%v1.(v1: -128.. -1 | v1+256) & SSHORT_MIN = -32768 & SSHORT_MAX = 32767 & SSHORT = SSHORT_MIN..SSHORT_MAX & bv16_sshort = %v0.(v0: BV16 | (-32768)*v0(16)+16384*v0(15)+8192*v0(14)+4096*v0(13)+2048*v0(12)+1024*v0(11)+512*v0(10)+256*v0(9)+128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)) & sshort_bv16 = %v0.(v0: SSHORT & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128,v0 mod 512/256,v0 mod 1024/512,v0 mod 2048/1024,v0 mod 4096/2048,v0 mod 8192/4096,v0 mod 16384/8192,v0 mod 32768/16384,v0 mod 65536/32768])\/%v0.(v0: SSHORT & not(0<=v0) | [(v0+USHORT_MAX+1) mod 2/1,(v0+USHORT_MAX+1) mod 4/2,(v0+USHORT_MAX+1) mod 8/4,(v0+USHORT_MAX+1) mod 16/8,(v0+USHORT_MAX+1) mod 32/16,(v0+USHORT_MAX+1) mod 64/32,(v0+USHORT_MAX+1) mod 128/64,(v0+USHORT_MAX+1) mod 256/128,(v0+USHORT_MAX+1) mod 512/256,(v0+USHORT_MAX+1) mod 1024/512,(v0+USHORT_MAX+1) mod 2048/1024,(v0+USHORT_MAX+1) mod 4096/2048,(v0+USHORT_MAX+1) mod 8192/4096,(v0+USHORT_MAX+1) mod 16384/8192,(v0+USHORT_MAX+1) mod 32768/16384,(v0+USHORT_MAX+1) mod 65536/32768]) & ushort_sshort = %v1.(v1: USHORT & v1<=SSHORT_MAX | v1)\/%v1.(v1: USHORT & not(v1<=SSHORT_MAX) | v1-USHORT_MAX-1) & sshort_ushort = %v1.(v1: SSHORT & 0<=v1 | v1)\/%v1.(v1: SSHORT & not(0<=v1) | v1+USHORT_MAX+1) & schar_sshort = %(w1,w2).(w1: SCHAR & w2: SCHAR | bv16_sshort(byte_bv16(schar_byte(w1),schar_byte(w2)))) & USHORT_MAX = 65535 & USHORT_MIN = 0 & USHORT = USHORT_MIN..USHORT_MAX & bv16_ushort = %v0.(v0: BV16 | 32768*v0(16)+16384*v0(15)+8192*v0(14)+4096*v0(13)+2048*v0(12)+1024*v0(11)+512*v0(10)+256*v0(9)+128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) & ushort_bv16 = %v0.(v0: USHORT | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128,v0 mod 512/256,v0 mod 1024/512,v0 mod 2048/1024,v0 mod 4096/2048,v0 mod 8192/4096,v0 mod 16384/8192,v0 mod 32768/16384,v0 mod 65536/32768]) & uchar_ushort = %(w1,w2).(w1: UCHAR & w2: UCHAR | bv16_ushort(byte_bv16(uchar_byte(w1),uchar_byte(w2)))));
("`Included,imported and extended machines properties'" & PROGRAM_R_ADR = USHORT & DATA_R_ADR = USHORT & STACK_R_ADR = USHORT);
("`Component invariant'" & rgs8: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8) = (1..16)*{id_reg_8} & pc: USHORT & sp: BV16 & ix: BV16 & iy: BV16 & i_: BYTE & r_: BYTE & iff1: BIT & iff2: BIT & im: BIT*BIT & io_ports: BYTE +-> BYTE & dom(io_ports) = BYTE & btrue & btrue);
("`Seen and used machines invariants'" & btrue);
("`Included,imported and extended machines invariants'" & mem: BV16 +-> BYTE & dom(mem) = BV16);
("`Component assertions'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(mem): POW(BYTE) & dom(mem) = BV16 & ran(rgs8): POW(BYTE) & dom(rgs8) = (1..16)*{id_reg_8} & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT & bv8get(rgs8(2|->id_reg_8),0): BIT & io_ports(rgs8(6|->id_reg_8)): BYTE & dec(rgs8(5|->id_reg_8)): BYTE);
("`Seen and used machines assertions'" & is_zero16USHORT: USHORT +-> BIT & dom(is_zero16USHORT) = USHORT & is_negative: BYTE +-> BIT & dom(is_negative) = BYTE & half8UCHAR: UCHAR +-> UCHAR & dom(half8UCHAR) = UCHAR & inc: BYTE +-> BYTE & dom(inc) = BYTE & dec: BYTE +-> BYTE & dom(dec) = BYTE & simple_add8UCHAR: UCHAR*UCHAR +-> UCHAR & dom(simple_add8UCHAR) = UCHAR*UCHAR & add16USHORT: BIT*USHORT*USHORT +-> USHORT & dom(add16USHORT) = BIT*USHORT*USHORT & substract8UCHAR: BIT*UCHAR*UCHAR +-> UCHAR*BIT*BIT*BIT*BIT & dom(substract8UCHAR) = BIT*UCHAR*UCHAR & add_carryUSHORT: BIT*USHORT*USHORT +-> BIT & dom(add_carryUSHORT) = BIT*USHORT*USHORT & sub16USHORT: BIT*USHORT*USHORT +-> USHORT & dom(sub16USHORT) = BIT*USHORT*USHORT & sub_carryUSHORT: BIT*USHORT*USHORT +-> BIT & dom(sub_carryUSHORT) = BIT*USHORT*USHORT & inc_BV16: BV16 +-> BV16 & dom(inc_BV16) = BV16 & dec_BV16: BV16 +-> BV16 & dom(dec_BV16) = BV16 & update_refresh_reg: BYTE +-> BYTE & dom(update_refresh_reg) = BYTE & instruction_next: USHORT +-> USHORT & dom(instruction_next) = USHORT & instruction_jump: USHORT*(-126..129) +-> USHORT & dom(instruction_jump) = USHORT*(-126..129) & dom(is_zero16USHORT) = USHORT & ran(is_zero16USHORT) = BIT & dom(is_negative) = BYTE & ran(is_negative) = BIT & dom(half8UCHAR) = UCHAR & ran(half8UCHAR): POW(UCHAR) & dom(inc) = BYTE & ran(inc) = BYTE & dom(dec) = BYTE & ran(dec) = BYTE & dom(simple_add8UCHAR) = UCHAR*UCHAR & ran(simple_add8UCHAR) = UCHAR & dom(add8UCHAR) = BIT*UCHAR*UCHAR & ran(add8UCHAR): POW(UCHAR*BIT*BIT*BIT*BIT) & dom(substract8UCHAR) = BIT*UCHAR*UCHAR & ran(substract8UCHAR): POW(UCHAR*BIT*BIT*BIT*BIT) & dom(add16USHORT) = BIT*USHORT*USHORT & ran(add16USHORT) = USHORT & dom(add_carryUSHORT) = BIT*USHORT*USHORT & ran(add_carryUSHORT) = BIT & dom(sub16USHORT) = BIT*USHORT*USHORT & ran(sub16USHORT) = USHORT & dom(sub_carryUSHORT) = BIT*USHORT*USHORT & ran(sub_carryUSHORT) = BIT & dom(inc_BV16) = BV16 & ran(inc_BV16) = BV16 & dom(dec_BV16) = BV16 & ran(dec_BV16) = BV16 & dom(update_refresh_reg) = BYTE & ran(update_refresh_reg) = BYTE & dom(instruction_next) = USHORT & ran(instruction_next) = USHORT & dom(instruction_jump) = USHORT*(-126..129) & ran(instruction_jump) = USHORT & 0 = schar_sshort(0,0) & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & byte_uchar: BYTE +-> UCHAR & byte_uchar~: UCHAR +-> BYTE & dom(byte_uchar) = BYTE & ran(byte_uchar) = UCHAR & uchar_byte: UCHAR +-> BYTE & uchar_byte~: BYTE +-> UCHAR & dom(uchar_byte) = UCHAR & ran(uchar_byte) = BYTE & byte_uchar = uchar_byte~ & schar_uchar: SCHAR +-> UCHAR & schar_uchar~: UCHAR +-> SCHAR & dom(schar_uchar) = SCHAR & ran(schar_uchar) = UCHAR & uchar_schar: UCHAR +-> SCHAR & uchar_schar~: SCHAR +-> UCHAR & dom(uchar_schar) = UCHAR & ran(uchar_schar) = SCHAR & schar_uchar = uchar_schar~ & byte_schar: BYTE +-> SCHAR & byte_schar~: SCHAR +-> BYTE & dom(byte_schar) = BYTE & ran(byte_schar) = SCHAR & schar_byte: SCHAR +-> BYTE & schar_byte~: BYTE +-> SCHAR & dom(schar_byte) = SCHAR & ran(schar_byte) = BYTE & byte_schar = schar_byte~ & bv16_byte: BV16 +-> BYTE*BYTE & bv16_byte~: BYTE*BYTE +-> BV16 & dom(bv16_byte) = BV16 & ran(bv16_byte) = BYTE*BYTE & byte_bv16: BYTE*BYTE +-> BV16 & byte_bv16~: BV16 +-> BYTE*BYTE & dom(byte_bv16) = BYTE*BYTE & ran(byte_bv16) = BV16 & bv16_byte = byte_bv16~ & bv16_ushort: BV16 +-> USHORT & bv16_ushort~: USHORT +-> BV16 & dom(bv16_ushort) = BV16 & ran(bv16_ushort) = USHORT & ushort_bv16: USHORT +-> BV16 & ushort_bv16~: BV16 +-> USHORT & dom(ushort_bv16) = USHORT & ran(ushort_bv16) = BV16 & bv16_ushort = ushort_bv16~ & uchar_ushort: UCHAR*UCHAR +-> USHORT & uchar_ushort~: USHORT +-> UCHAR*UCHAR & dom(uchar_ushort) = UCHAR*UCHAR & ran(uchar_ushort) = USHORT & bv16_sshort: BV16 +-> SSHORT & bv16_sshort~: SSHORT +-> BV16 & dom(bv16_sshort) = BV16 & ran(bv16_sshort) = SSHORT & sshort_bv16: SSHORT +-> BV16 & sshort_bv16~: BV16 +-> SSHORT & dom(sshort_bv16) = SSHORT & ran(sshort_bv16) = BV16 & bv16_sshort = sshort_bv16~ & schar_sshort: SCHAR*SCHAR +-> SSHORT & schar_sshort~: SSHORT +-> SCHAR*SCHAR & dom(schar_sshort) = SCHAR*SCHAR & ran(schar_sshort) = SSHORT & sshort_ushort: SSHORT +-> USHORT & sshort_ushort~: USHORT +-> SSHORT & dom(sshort_ushort) = SSHORT & ran(sshort_ushort) = USHORT & ushort_sshort: USHORT +-> SSHORT & ushort_sshort~: SSHORT +-> USHORT & dom(ushort_sshort) = USHORT & ran(ushort_sshort) = SSHORT & sshort_ushort = ushort_sshort~ & !bb.(bb: BIT => bit_not(bb) = 1-bb) & dom(bit_and) = BIT*BIT & ran(bit_not) = BIT & bit_not(0) = 1 & bit_not(1) = 0 & !bb.(bb: BIT => bit_not(bit_not(bb)) = bb) & dom(bit_and) = BIT*BIT & ran(bit_and) = BIT & bit_and(0,0) = 0 & bit_and(0,1) = 0 & bit_and(1,0) = 0 & bit_and(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_and(b1,b2) = bit_and(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 1 => bit_and(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 0 => bit_and(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_and(b1,bit_and(b2,b3)) = bit_and(bit_and(b1,b2),b3)) & !b1.(b1: BIT => bit_and(b1,1) = b1) & !b1.(b1: BIT => bit_and(b1,0) = 0) & dom(bit_or) = BIT*BIT & ran(bit_or) = BIT & bit_or(0,0) = 0 & bit_or(0,1) = 1 & bit_or(1,0) = 1 & bit_or(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_or(b1,b2) = bit_or(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 1 => bit_or(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 0 => bit_or(b2,b1) = 0) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 1 => b1 = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 0 => b1 = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_or(b1,bit_or(b2,b3)) = bit_or(bit_or(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = 1) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = bit_or(1,b3)) & !b1.(b1: BIT => bit_or(b1,1) = 1) & !b1.(b1: BIT => bit_or(b1,0) = b1) & !b1.(b1: BIT => bit_or(1,b1) = 1) & !b1.(b1: BIT => bit_or(0,b1) = b1) & dom(bit_xor) = BIT*BIT & ran(bit_xor) = BIT & bit_xor(0,0) = 0 & bit_xor(0,1) = 1 & bit_xor(1,0) = 1 & bit_xor(1,1) = 0 & !(b1,b2).(b1: BIT & b2: BIT => bit_xor(b1,b2) = bit_xor(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 1 => bit_xor(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 0 => bit_xor(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(bit_xor(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_xor(b1,b2) = 1 => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(1,b3)) & !bb.(bb: BIT => bit_xor(bb,bb) = 0) & dom(bool_bit) = BOOL & ran(bit_xor) = BIT & bool_bit(TRUE) = 1 & bool_bit(FALSE) = 0 & !bb.(bb: BIT => bb = 0 or bb = 1) & !bb.(bb: BIT & not(bb = 0) => bb = 1) & !bb.(bb: BIT & not(bb = 1) => bb = 0) & card(BYTE) = 256 & is_zero: BYTE +-> BIT & dom(is_zero) = BYTE & parity_even: BYTE +-> BIT & dom(parity_even) = BYTE & bv8_and: BYTE*BYTE +-> BYTE & dom(bv8_and) = BYTE*BYTE & bv8_or: BYTE*BYTE +-> BYTE & dom(bv8_or) = BYTE*BYTE & bv8_xor: BYTE*BYTE +-> BYTE & dom(bv8_xor) = BYTE*BYTE & complement: BYTE +-> BYTE & dom(complement) = BYTE & swap: BYTE +-> BYTE & dom(swap) = BYTE & rotateleft: BYTE +-> BYTE & dom(rotateleft) = BYTE & rotateright: BYTE +-> BYTE & dom(rotateright) = BYTE & !bt.(bt: BYTE => size(bt) = 8) & 8: INTEGER & btrue & dom(is_zero) = BYTE & ran(is_zero): POW(BIT) & dom(parity_even) = BYTE & ran(parity_even): POW(BIT) & bv8_and: BYTE*BYTE +-> BYTE & dom(bv8_and) = BYTE*BYTE & dom(complement) = BYTE & ran(complement): POW(BYTE) & dom(swap) = BYTE & ran(swap): POW(BYTE) & dom(rotateleft) = BYTE & ran(rotateleft): POW(BYTE) & dom(rotateright) = BYTE & ran(rotateright): POW(BYTE) & dom(get_upper_digit) = BYTE & ran(get_upper_digit): POW(0..15) & dom(get_lower_digit) = BYTE & ran(get_lower_digit): POW(0..15) & [1,1,1,1,1,1,1,1]: BYTE & [0,0,0,0,0,0,0,0]: BYTE & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & card(BV16) = 65536 & complement16: BV16 +-> BV16 & dom(complement16) = BV16 & byte_bv16 = bv16_byte~ & [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]: BV16 & [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]: BV16 & card(byte_uchar) = 256 & card(uchar_byte) = 256 & UCHAR_MAX: INTEGER & UCHAR_MIN: INTEGER & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & card(byte_schar) = 256 & card(schar_byte) = 256 & SCHAR_MAX: INTEGER & SCHAR_MIN: INTEGER & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & card(bv16_sshort) = 65536 & card(sshort_bv16) = 65536 & SSHORT_MIN: SSHORT & SSHORT_MAX: SSHORT & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & card(bv16_ushort) = 65536 & card(ushort_bv16) = 65536 & USHORT_MAX: INTEGER & USHORT_MIN: INTEGER & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & 2**0 = 1 & 2**1 = 2 & 2**2 = 4 & 2**3 = 8 & 2**4 = 16 & 2**5 = 32 & 2**6 = 64 & 2**7 = 128 & (-2)**7 = -128 & 2**8 = 256 & 2**9 = 512 & 2**10 = 1024 & 2**11 = 2048 & 2**12 = 4096 & 2**13 = 8192 & 2**14 = 16384 & 2**15 = 32768 & 2**16 = 65536);
("`Included,imported and extended machines assertions'" & ran(mem): POW(BYTE) & dom(mem) = BV16 & !(address,value).(address: BV16 & value: BYTE => mem<+{address|->value}: BV16 +-> BYTE & dom(mem<+{address|->value}) = BV16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0);
(rgs8_(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1);
(rgs8_(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2);
(rgs8_(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3);
(rgs8_(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4);
(rgs8_(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5);
(rgs8_(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6);
(rgs8_(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7);
(rgs8_(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 1|->id_reg_16);
(5|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 1|->id_reg_16);
(6|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 1|->id_reg_16);
(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 1|->id_reg_16);
(byte_bv16: dom(byte_bv16) +-> ran(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 2|->id_reg_16);
(9|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 2|->id_reg_16);
(10|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 2|->id_reg_16);
(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 2|->id_reg_16);
(byte_bv16: dom(byte_bv16) +-> ran(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 3|->id_reg_16);
(13|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 3|->id_reg_16);
(14|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 3|->id_reg_16);
(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 3|->id_reg_16);
(byte_bv16: dom(byte_bv16) +-> ran(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 5|->id_reg_16);
(1|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 5|->id_reg_16);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 5|->id_reg_16);
(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & REG16_TO_REG8 = %idf.(idf: (1..5)*{id_reg_16} & idf = 1|->id_reg_16 | 5|->id_reg_8,6|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 2|->id_reg_16 | 9|->id_reg_8,10|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 3|->id_reg_16 | 13|->id_reg_8,14|->id_reg_8)\/%idf.(idf: (1..5)*{id_reg_16} & idf = 5|->id_reg_16 | 1|->id_reg_8,2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = %(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 5|->id_reg_8 & idf2 = 6|->id_reg_8 | 1|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 9|->id_reg_8 & idf2 = 10|->id_reg_8 | 2|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 13|->id_reg_8 & idf2 = 14|->id_reg_8 | 3|->id_reg_16)\/%(idf1,idf2).(idf1: (1..16)*{id_reg_8} & idf2: (1..16)*{id_reg_8} & idf1 = 1|->id_reg_8 & idf2 = 2|->id_reg_8 | 5|->id_reg_16) & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & cc_get = %(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 0 | 1-bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 1 | bv8get(rgs8_(2|->id_reg_8),6))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 2 | 1-bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 3 | bv8get(rgs8_(2|->id_reg_8),0))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 4 | 1-bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 5 | bv8get(rgs8_(2|->id_reg_8),2))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 6 | 1-bv8get(rgs8_(2|->id_reg_8),7))\/%(rgs8_,ind).(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & ind = 7 | bv8get(rgs8_(2|->id_reg_8),7)) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1 = 5|->id_reg_16);
(byte_bv16: dom(byte_bv16) +-> ran(byte_bv16));
("`Local hypotheses'" & btrue);
(REG16_TO_REG8: FIN(REG16_TO_REG8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5);
(update_flag_reg: FIN(update_flag_reg));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT);
(b1,b2,b3,b4,b5,b6: dom(update_flag_reg));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT);
(rgs8(2|->id_reg_8),5: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT);
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT);
(rgs8(2|->id_reg_8),3: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT);
(rgs8(2|->id_reg_8),1: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT & bv8get(rgs8(2|->id_reg_8),0): BIT);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT & bv8get(rgs8(2|->id_reg_8),0): BIT);
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT & bv8get(rgs8(2|->id_reg_8),0): BIT & io_ports(rgs8(6|->id_reg_8)): BYTE);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & card(REG16_TO_REG8) = 5 & card(update_flag_reg) = 64 & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bv8get(rgs8(2|->id_reg_8),7): BIT & bv8get(rgs8(2|->id_reg_8),6): BIT & bv8get(rgs8(2|->id_reg_8),5): BIT & bv8get(rgs8(2|->id_reg_8),4): BIT & bv8get(rgs8(2|->id_reg_8),3): BIT & bv8get(rgs8(2|->id_reg_8),2): BIT & bv8get(rgs8(2|->id_reg_8),1): BIT & bv8get(rgs8(2|->id_reg_8),0): BIT & io_ports(rgs8(6|->id_reg_8)): BYTE);
(rgs8(5|->id_reg_8): dom(dec));
("`ext_update_io_ports preconditions in previous components'" & btrue);
("`ext_update_io_ports preconditions in this component'" & address: UCHAR & value: SCHAR);
("`IN_A_9n0 preconditions in previous components'" & btrue);
("`IN_A_9n0 preconditions in this component'" & nn: UCHAR);
("`Local hypotheses'" & btrue);
(uchar_byte(nn): dom(io_ports));
("`IN_r_9C0 preconditions in previous components'" & btrue);
("`IN_r_9C0 preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0);
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0 & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 0);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0 & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 0);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0 & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 0 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0 & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 0 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0 & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 0 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(io_ports(rgs8(6|->id_reg_8))) & half_carry = 0 & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 0 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`INI preconditions in previous components'" & btrue);
("`INI preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`INIR preconditions in previous components'" & btrue);
("`INIR preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1);
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = 1 & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`IND preconditions in previous components'" & btrue);
("`IND preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`INDR preconditions in previous components'" & btrue);
("`INDR preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(io_ports(rgs8(6|->id_reg_8))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(io_ports(rgs8(6|->id_reg_8))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`OUT_9n0_A preconditions in previous components'" & btrue);
("`OUT_9n0_A preconditions in this component'" & nn: UCHAR);
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`OUT_9C0_r preconditions in previous components'" & btrue);
("`OUT_9C0_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`OUTI preconditions in previous components'" & btrue);
("`OUTI preconditions in this component'" & btrue);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`OUTIR preconditions in previous components'" & btrue);
("`OUTIR preconditions in this component'" & btrue);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`OUTD preconditions in previous components'" & btrue);
("`OUTD preconditions in this component'" & btrue);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`OUTDR preconditions in previous components'" & btrue);
("`OUTDR preconditions in this component'" & btrue);
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))));
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & hvn: BYTE & lvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & zero = is_zero(dec(rgs8(5|->id_reg_8))) & half_carry = bv8get(rgs8(2|->id_reg_8),4) & pv = parity_even(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & add_sub = 1 & carry = bv8get(rgs8(2|->id_reg_8),0));
(rgs8(5|->id_reg_8): dom(dec));
("`RLCA preconditions in previous components'" & btrue);
("`RLCA preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(1|->id_reg_8),7): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8): dom(rotateleft));
("`RLA preconditions in previous components'" & btrue);
("`RLA preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(1|->id_reg_8),7): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8): dom(rotateleft));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`RRCA preconditions in previous components'" & btrue);
("`RRCA preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(1|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8): dom(rotateright));
("`RRA preconditions in previous components'" & btrue);
("`RRA preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(1|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(1|->id_reg_8): dom(rotateright));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`RLC_r preconditions in previous components'" & btrue);
("`RLC_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & res: BYTE);
(rgs8(rr): dom(rotateleft));
("`Local hypotheses'" & res: BYTE & res = rotateleft(rgs8(rr)));
(rgs8(rr),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(rgs8(rr)));
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(rgs8(rr),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(rgs8(rr)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`RLC_9HL0 preconditions in previous components'" & btrue);
("`RLC_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`RLC_9IX_d0 preconditions in previous components'" & btrue);
("`RLC_9IX_d0 preconditions in this component'" & desloc: SCHAR & bv16_ushort(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(rotateleft));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))));
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))));
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & desloc: SCHAR);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(bv16_ushort));
("`RLC_9IY_d0 preconditions in previous components'" & btrue);
("`RLC_9IY_d0 preconditions in this component'" & desloc: SCHAR & bv16_ushort(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(rotateleft));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))));
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))));
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & desloc: SCHAR);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(bv16_ushort));
("`RL_r preconditions in previous components'" & btrue);
("`RL_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & res: BYTE);
(rgs8(rr): dom(rotateleft));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(rr),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(rgs8(rr),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`RL_9HL preconditions in previous components'" & btrue);
("`RL_9HL preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{0|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`RL_9IX_d0 preconditions in previous components'" & btrue);
("`RL_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(rotateleft));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`RL_9IY_d0 preconditions in previous components'" & btrue);
("`RL_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(rotateleft));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateleft(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`RRC_r preconditions in previous components'" & btrue);
("`RRC_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & res: BYTE);
(rgs8(rr): dom(rotateright));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr)));
(rgs8(rr),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr)));
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(rgs8(rr),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`RRC_9HL0 preconditions in previous components'" & btrue);
("`RRC_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`RRC_9IX_d0 preconditions in previous components'" & btrue);
("`RRC_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))));
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))));
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`RRC_9IY_d0 preconditions in previous components'" & btrue);
("`RRC_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))));
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))));
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`RR_r preconditions in previous components'" & btrue);
("`RR_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & res: BYTE);
(rgs8(rr): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(rr),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(rgs8(rr),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`RR_9HL preconditions in previous components'" & btrue);
("`RR_9HL preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): STACK_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`RR_9IX_d0 preconditions in previous components'" & btrue);
("`RR_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`RR_9IY_d0 preconditions in previous components'" & btrue);
("`RR_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{1|->bv8get(rgs8(2|->id_reg_8),0)} & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`SLA_r preconditions in previous components'" & btrue);
("`SLA_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & res: BYTE);
(rgs8(rr): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(rr),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(rgs8(rr),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(rgs8(rr))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SLA_9HL0 preconditions in previous components'" & btrue);
("`SLA_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{1|->bv8get(rgs8(2|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`SRA_9HL0 preconditions in previous components'" & btrue);
("`SRA_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE);
(7: dom(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
("`Local hypotheses'" & res: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): dom(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) +-> ran(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))<+{8|->mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))(7)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`SRA_9IX_d0 preconditions in previous components'" & btrue);
("`SRA_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)});
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)});
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`SRA_9IY_d0 preconditions in previous components'" & btrue);
("`SRA_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)});
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)});
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(is_negative(res),is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))<+{7|->bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),7)} & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`SRL_r preconditions in previous components'" & btrue);
("`SRL_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & res: BYTE);
(rgs8(rr): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(rotateright(rgs8(rr)),7: dom(bitclear));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(rgs8(rr)),7));
(rgs8(rr),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(rgs8(rr)),7));
(0,is_zero(res),0,parity_even(res),0,bv8get(rgs8(rr),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(rgs8(rr)),7));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SRL_9HL0 preconditions in previous components'" & btrue);
("`SRL_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE);
(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7: dom(bitclear));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(0,is_zero(res),0,parity_even(res),0,bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),7));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`SRL_9IX_d0 preconditions in previous components'" & btrue);
("`SRL_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7: dom(bitclear));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7));
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7));
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0,is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`SRL_9IY_d0 preconditions in previous components'" & btrue);
("`SRL_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & res: BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & res: BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(rotateright));
("`Local hypotheses'" & res: BYTE);
(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7: dom(bitclear));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7));
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7));
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0,is_zero(res),0,parity_even(res),0,bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & res: BYTE & res = bitclear(rotateright(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),7) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`RLD preconditions in previous components'" & btrue);
("`RLD preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),1: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),3: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(is_negative(acc),is_zero(acc),0,parity_even(acc),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{7|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{6|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{5|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}\/{4|->bv8get(rgs8(1|->id_reg_8),3)}\/{3|->bv8get(rgs8(1|->id_reg_8),2)}\/{2|->bv8get(rgs8(1|->id_reg_8),1)}\/{1|->bv8get(rgs8(1|->id_reg_8),0)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)}));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`RRD preconditions in previous components'" & btrue);
("`RRD preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),1: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE);
(rgs8(1|->id_reg_8),3: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)});
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(is_negative(acc),is_zero(acc),0,parity_even(acc),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BYTE & acc: BYTE & res = {8|->bv8get(rgs8(1|->id_reg_8),3)}\/{7|->bv8get(rgs8(1|->id_reg_8),2)}\/{6|->bv8get(rgs8(1|->id_reg_8),1)}\/{5|->bv8get(rgs8(1|->id_reg_8),0)}\/{4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),7)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),6)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),5)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),4)} & acc = rgs8(1|->id_reg_8)<+({4|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),3)}\/{3|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),2)}\/{2|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),1)}\/{1|->bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),0)}));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`BIT_b_rr preconditions in previous components'" & btrue);
("`BIT_b_rr preconditions in this component'" & bb: 0..7 & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(rgs8(rr),bb: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(rr),bb): dom(bit_not));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bit_not(bv8get(rgs8(rr),bb)),1,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`BIT_b_9HL0 preconditions in previous components'" & btrue);
("`BIT_b_9HL0 preconditions in this component'" & bb: 0..7);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): dom(bit_not));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bit_not(bv8get(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb)),1,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`BIT_b_9IX_d0 preconditions in previous components'" & btrue);
("`BIT_b_9IX_d0 preconditions in this component'" & bb: 0..7 & desloc: SCHAR);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): dom(bit_not));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bit_not(bv8get(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb)),1,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`BIT_b_9IY_d0 preconditions in previous components'" & btrue);
("`BIT_b_9IY_d0 preconditions in this component'" & bb: 0..7 & desloc: SCHAR);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): dom(bit_not));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bit_not(bv8get(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb)),1,bv8get(rgs8(2|->id_reg_8),2),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SET_b_r preconditions in previous components'" & btrue);
("`SET_b_r preconditions in this component'" & bb: 0..7 & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & btrue);
(rgs8(rr),bb: dom(bitset));
("`SET_b_9HL0 preconditions in previous components'" & btrue);
("`SET_b_9HL0 preconditions in this component'" & bb: 0..7 & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb: dom(bitset));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & bitset(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb: dom(bitset));
("`Local hypotheses'" & bb: 0..7);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bb: 0..7);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bb: 0..7);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`SET_b_9IX_d0 preconditions in previous components'" & btrue);
("`SET_b_9IX_d0 preconditions in this component'" & bb: 0..7 & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb: dom(bitset));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb: dom(bitset));
("`Local hypotheses'" & bb: 0..7 & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`SET_b_9IY_d0 preconditions in previous components'" & btrue);
("`SET_b_9IY_d0 preconditions in this component'" & bb: 0..7 & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb: dom(bitset));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitset(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb: dom(bitset));
("`Local hypotheses'" & bb: 0..7 & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`RES_b_r preconditions in previous components'" & btrue);
("`RES_b_r preconditions in this component'" & bb: 0..7 & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & btrue);
(rgs8(rr),bb: dom(bitclear));
("`RES_b_9HL0 preconditions in previous components'" & btrue);
("`RES_b_9HL0 preconditions in this component'" & bb: 0..7 & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb: dom(bitclear));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & bitclear(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb): BYTE);
(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bb: dom(bitclear));
("`Local hypotheses'" & bb: 0..7);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bb: 0..7);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & bb: 0..7);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`RES_b_9IX_d0 preconditions in previous components'" & btrue);
("`RES_b_9IX_d0 preconditions in this component'" & bb: 0..7 & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb: dom(bitclear));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb): BYTE);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)),bb: dom(bitclear));
("`Local hypotheses'" & bb: 0..7 & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`RES_b_9IY_d0 preconditions in previous components'" & btrue);
("`RES_b_9IY_d0 preconditions in this component'" & bb: 0..7 & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb: dom(bitclear));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & bitclear(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb): BYTE);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)),bb: dom(bitclear));
("`Local hypotheses'" & bb: 0..7 & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`JP_nn preconditions in previous components'" & btrue);
("`JP_nn preconditions in this component'" & nn: USHORT);
("`JP_cc_nn preconditions in previous components'" & btrue);
("`JP_cc_nn preconditions in this component'" & cc: 0..7 & nn: USHORT);
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & res: BIT);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & res: BIT);
(cc: dom({0|->bit_not(bv8get(rgs8(2|->id_reg_8),6))}\/{1|->bv8get(rgs8(2|->id_reg_8),6)}\/{2|->bit_not(bv8get(rgs8(2|->id_reg_8),0))}\/{3|->bv8get(rgs8(2|->id_reg_8),0)}\/{4|->bit_not(bv8get(rgs8(2|->id_reg_8),2))}\/{5|->bv8get(rgs8(2|->id_reg_8),2)}\/{6|->bit_not(bv8get(rgs8(2|->id_reg_8),7))}\/{7|->bv8get(rgs8(2|->id_reg_8),7)}));
("`Local hypotheses'" & res: BIT);
({0|->bit_not(bv8get(rgs8(2|->id_reg_8),6))}\/{1|->bv8get(rgs8(2|->id_reg_8),6)}\/{2|->bit_not(bv8get(rgs8(2|->id_reg_8),0))}\/{3|->bv8get(rgs8(2|->id_reg_8),0)}\/{4|->bit_not(bv8get(rgs8(2|->id_reg_8),2))}\/{5|->bv8get(rgs8(2|->id_reg_8),2)}\/{6|->bit_not(bv8get(rgs8(2|->id_reg_8),7))}\/{7|->bv8get(rgs8(2|->id_reg_8),7)}: dom({0|->bit_not(bv8get(rgs8(2|->id_reg_8),6))}\/{1|->bv8get(rgs8(2|->id_reg_8),6)}\/{2|->bit_not(bv8get(rgs8(2|->id_reg_8),0))}\/{3|->bv8get(rgs8(2|->id_reg_8),0)}\/{4|->bit_not(bv8get(rgs8(2|->id_reg_8),2))}\/{5|->bv8get(rgs8(2|->id_reg_8),2)}\/{6|->bit_not(bv8get(rgs8(2|->id_reg_8),7))}\/{7|->bv8get(rgs8(2|->id_reg_8),7)}) +-> ran({0|->bit_not(bv8get(rgs8(2|->id_reg_8),6))}\/{1|->bv8get(rgs8(2|->id_reg_8),6)}\/{2|->bit_not(bv8get(rgs8(2|->id_reg_8),0))}\/{3|->bv8get(rgs8(2|->id_reg_8),0)}\/{4|->bit_not(bv8get(rgs8(2|->id_reg_8),2))}\/{5|->bv8get(rgs8(2|->id_reg_8),2)}\/{6|->bit_not(bv8get(rgs8(2|->id_reg_8),7))}\/{7|->bv8get(rgs8(2|->id_reg_8),7)}));
("`JR_e preconditions in previous components'" & btrue);
("`JR_e preconditions in this component'" & ee_p: USHORT & ee_p-pc<=129 & -126<=ee_p-pc);
("`JR_C_e preconditions in previous components'" & btrue);
("`JR_C_e preconditions in this component'" & ee_p: USHORT & ee_p-pc<=129 & -126<=ee_p-pc);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`JR_NC_e preconditions in previous components'" & btrue);
("`JR_NC_e preconditions in this component'" & ee_p: USHORT & ee_p-pc<=129 & -126<=ee_p-pc);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`JR_Z_e preconditions in previous components'" & btrue);
("`JR_Z_e preconditions in this component'" & ee_p: USHORT & ee_p-pc<=129 & -126<=ee_p-pc);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`JR_NZ_e preconditions in previous components'" & btrue);
("`JR_NZ_e preconditions in this component'" & ee_p: USHORT & ee_p-pc<=129 & -126<=ee_p-pc);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`JP_HL preconditions in previous components'" & btrue);
("`JP_HL preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`JP_IX preconditions in previous components'" & btrue);
("`JP_IX preconditions in this component'" & btrue);
("`JP_IY preconditions in previous components'" & btrue);
("`JP_IY preconditions in this component'" & btrue);
("`DJNZ_e preconditions in previous components'" & btrue);
("`DJNZ_e preconditions in this component'" & ee_p: USHORT & ee_p-pc<=129 & -126<=ee_p-pc);
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8): dom(dec));
("`CALL_nn preconditions in previous components'" & btrue);
("`CALL_nn preconditions in this component'" & nn: USHORT & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & high: BYTE & low: BYTE);
(ushort_bv16(pc): dom(bv16_byte));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & not(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)) = ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & nn: USHORT);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & nn: USHORT);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`CALL_cc_nn preconditions in previous components'" & btrue);
("`CALL_cc_nn preconditions in this component'" & cc: 0..8 & nn: USHORT & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & high: BYTE & low: BYTE);
(ushort_bv16(pc): dom(bv16_byte));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)));
(rgs8,cc: dom(cc_get));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)) & cc_get(rgs8,cc) = 1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->high}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->low}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & high: BYTE & low: BYTE & high,low = bv16_byte(ushort_bv16(pc)));
(rgs8,cc: dom(cc_get));
("`Local hypotheses'" & cc: 0..8 & nn: USHORT);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & cc: 0..8 & nn: USHORT);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`RET preconditions in previous components'" & btrue);
("`RET preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp)): dom(bv16_ushort));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`RET_cc preconditions in previous components'" & btrue);
("`RET_cc preconditions in this component'" & cc: 0..7);
("`Local hypotheses'" & btrue);
(rgs8,cc: dom(cc_get));
("`Local hypotheses'" & cc_get(rgs8,cc) = 1);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & cc_get(rgs8,cc) = 1);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & cc_get(rgs8,cc) = 1);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & cc_get(rgs8,cc) = 1);
(byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp)): dom(bv16_ushort));
("`Local hypotheses'" & cc_get(rgs8,cc) = 1);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & cc_get(rgs8,cc) = 1);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(rgs8,cc: dom(cc_get));
("`RETI preconditions in previous components'" & btrue);
("`RETI preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp)): dom(bv16_ushort));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`RETN preconditions in previous components'" & btrue);
("`RETN preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp)): dom(bv16_ushort));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`RST_p preconditions in previous components'" & btrue);
("`RST_p preconditions in this component'" & pp: 0..7 & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE);
(ushort_bv16(pc): dom(bv16_byte));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_h}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_l}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_h}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_l}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_h}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_l}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_h}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_l}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_h}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_l}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_l: BYTE & pc_h: BYTE & bv16_byte(ushort_bv16(pc)) = pc_l|->pc_h & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_h}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_l}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pp: 0..7);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pp: 0..7);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`AND_A_r preconditions in previous components'" & btrue);
("`AND_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),rgs8(rr): dom(bv8_and));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),rgs8(rr)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),rgs8(rr)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`AND_A_n preconditions in previous components'" & btrue);
("`AND_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),schar_byte(n1): dom(bv8_and));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),schar_byte(n1)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),schar_byte(n1)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`AND_A_9HL0 preconditions in previous components'" & btrue);
("`AND_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): dom(bv8_and));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`AND_A_9IX_d0 preconditions in previous components'" & btrue);
("`AND_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(bv8_and));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`AND_A_9IY_d0 preconditions in previous components'" & btrue);
("`AND_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(bv8_and));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_and(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`OR_A_r preconditions in previous components'" & btrue);
("`OR_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),rgs8(rr): dom(bv8_or));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),rgs8(rr)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),rgs8(rr)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`OR_A_n preconditions in previous components'" & btrue);
("`OR_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),schar_byte(n1): dom(bv8_or));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),schar_byte(n1)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),schar_byte(n1)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`OR_A_9HL0 preconditions in previous components'" & btrue);
("`OR_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): dom(bv8_or));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`OR_A_9IX_d0 preconditions in previous components'" & btrue);
("`OR_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(bv8_or));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`OR_A_9IY_d0 preconditions in previous components'" & btrue);
("`OR_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(bv8_or));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_or(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`XOR_A_r preconditions in previous components'" & btrue);
("`XOR_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),rgs8(rr): dom(bv8_xor));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),rgs8(rr)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),rgs8(rr)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`XOR_A_n preconditions in previous components'" & btrue);
("`XOR_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),schar_byte(n1): dom(bv8_xor));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),schar_byte(n1)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),schar_byte(n1)) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`XOR_A_9HL0 preconditions in previous components'" & btrue);
("`XOR_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): dom(bv8_xor));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`XOR_A_9IX_d0 preconditions in previous components'" & btrue);
("`XOR_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(bv8_xor));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`XOR_A_9IY_d0 preconditions in previous components'" & btrue);
("`XOR_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT);
(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(bv8_xor));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(negative,zero,half_carry,pv,add_sub,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & negative: BIT & zero: BIT & half_carry: BIT & pv: BIT & add_sub: BIT & carry: BIT & result = bv8_xor(rgs8(1|->id_reg_8),mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))) & negative = is_negative(result) & zero = is_zero(result) & half_carry = 0 & pv = parity_even(result) & add_sub = 0 & carry = 0);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CP_A_r preconditions in previous components'" & btrue);
("`CP_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr)): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CP_A_n preconditions in previous components'" & btrue);
("`CP_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CP_A_9HL0 preconditions in previous components'" & btrue);
("`CP_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CP_A_9IX_d0 preconditions in previous components'" & btrue);
("`CP_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CP_A_9IY_d0 preconditions in previous components'" & btrue);
("`CP_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`INC_r preconditions in previous components'" & btrue);
("`INC_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(rr)),1: dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(rr)),1));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(rr)),1));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`INC_9HL0 preconditions in previous components'" & btrue);
("`INC_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1: dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`INC_9IX_d0 preconditions in previous components'" & btrue);
("`INC_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1: dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1));
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1));
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`INC_9IY_d0 preconditions in previous components'" & btrue);
("`INC_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1: dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1));
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1));
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`DEC_r preconditions in previous components'" & btrue);
("`DEC_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & not(rr = 2|->id_reg_8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(rr)),1: dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(rr)),1));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(rr)),1));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(rr)),1));
(negative,zero,half_carry,carry,1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(rr)),1));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`DEC_9HL0 preconditions in previous components'" & btrue);
("`DEC_9HL0 preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1: dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(negative,zero,half_carry,carry,1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))),1) & uchar_byte(sum): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`DEC_9IX_d0 preconditions in previous components'" & btrue);
("`DEC_9IX_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1: dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1));
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1));
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(negative,zero,half_carry,carry,1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`DEC_9IY_d0 preconditions in previous components'" & btrue);
("`DEC_9IY_d0 preconditions in this component'" & desloc: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1: dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1));
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1));
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(negative,zero,half_carry,carry,1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))),1) & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & uchar_byte(sum): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`ADD_HL_ss preconditions in previous components'" & btrue);
("`ADD_HL_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(sp,rgs8,ss: dom(get_bv_reg16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add16USHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(ushort_bv16(result): dom(bv16_byte));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(add_halfcarryUSHORT: dom(add_halfcarryUSHORT) +-> ran(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_carryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(negative,zero,half_carry,bv8get(rgs8(2|->id_reg_8),2),0,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADC_HL_ss preconditions in previous components'" & btrue);
("`ADC_HL_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(sp,rgs8,ss: dom(get_bv_reg16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add16USHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(add_halfcarryUSHORT: dom(add_halfcarryUSHORT) +-> ran(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_carryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = add_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SBC_HL_ss preconditions in previous components'" & btrue);
("`SBC_HL_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(sp,rgs8,ss: dom(get_bv_reg16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(sub16USHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(sub_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result));
(sub_halfcarryUSHORT: dom(sub_halfcarryUSHORT) +-> ran(sub_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(sub_carryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = sub_carryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = sub16USHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & negative = 1 & zero = is_zero16USHORT(result) & half_carry = sub_halfcarryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = sub_carryUSHORT(bv8get(rgs8(2|->id_reg_8),0),bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADD_IX_ss preconditions in previous components'" & btrue);
("`ADD_IX_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(sp,rgs8,ss: dom(get_bv_reg16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add16USHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(ushort_bv16(result): dom(bv16_byte));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(add_halfcarryUSHORT: dom(add_halfcarryUSHORT) +-> ran(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_carryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(negative,zero,half_carry,bv8get(rgs8(2|->id_reg_8),2),0,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADD_IY_ss preconditions in previous components'" & btrue);
("`ADD_IY_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(sp,rgs8,ss: dom(get_bv_reg16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value);
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add16USHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(ushort_bv16(result): dom(bv16_byte));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6));
(add_halfcarryUSHORT: dom(add_halfcarryUSHORT) +-> ran(add_halfcarryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value): dom(add_carryUSHORT));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(negative,zero,half_carry,bv8get(rgs8(2|->id_reg_8),2),0,carry: dom(update_flag_reg));
("`Local hypotheses'" & result: USHORT & bv_value: BV16 & bvh: BYTE & bvl: BYTE & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & get_bv_reg16(sp,rgs8,ss) = bv_value & result = add16USHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & bvh,bvl = bv16_byte(ushort_bv16(result)) & negative = bv8get(rgs8(2|->id_reg_8),7) & zero = bv8get(rgs8(2|->id_reg_8),6) & half_carry = add_halfcarryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)) & carry = add_carryUSHORT(0,bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))),bv16_ushort(bv_value)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`INC_ss preconditions in previous components'" & btrue);
("`INC_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE);
(ss: dom(REG16_TO_REG8));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE & REG16_TO_REG8(ss) = rh|->rl & not(rh = rl));
(rgs8(rh),rgs8(rl): dom(byte_bv16));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE & REG16_TO_REG8(ss) = rh|->rl & not(rh = rl));
(byte_bv16(rgs8(rh),rgs8(rl)): dom(inc_BV16));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE & REG16_TO_REG8(ss) = rh|->rl & not(rh = rl));
(inc_BV16(byte_bv16(rgs8(rh),rgs8(rl))): dom(bv16_byte));
("`INC_IX preconditions in previous components'" & btrue);
("`INC_IX preconditions in this component'" & btrue);
("`INC_IY preconditions in previous components'" & btrue);
("`INC_IY preconditions in this component'" & btrue);
("`DEC_ss preconditions in previous components'" & btrue);
("`DEC_ss preconditions in this component'" & ss: (1..5)*{id_reg_16} & not(ss = 5|->id_reg_16));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE);
(ss: dom(REG16_TO_REG8));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE & REG16_TO_REG8(ss) = rh|->rl & not(rh = rl));
(rgs8(rh),rgs8(rl): dom(byte_bv16));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE & REG16_TO_REG8(ss) = rh|->rl & not(rh = rl));
(byte_bv16(rgs8(rh),rgs8(rl)): dom(dec_BV16));
("`Local hypotheses'" & not(ss = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & vh: BYTE & vl: BYTE & REG16_TO_REG8(ss) = rh|->rl & not(rh = rl));
(dec_BV16(byte_bv16(rgs8(rh),rgs8(rl))): dom(bv16_byte));
("`DEC_IX preconditions in previous components'" & btrue);
("`DEC_IX preconditions in this component'" & btrue);
("`DEC_IY preconditions in previous components'" & btrue);
("`DEC_IY preconditions in this component'" & btrue);
("`ADD_A_r preconditions in previous components'" & btrue);
("`ADD_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr)): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADD_A_n preconditions in previous components'" & btrue);
("`ADD_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADD_A_9HL0 preconditions in previous components'" & btrue);
("`ADD_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADD_A_9IX_d0 preconditions in previous components'" & btrue);
("`ADD_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADD_A_9IY_d0 preconditions in previous components'" & btrue);
("`ADD_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADC_A_r preconditions in previous components'" & btrue);
("`ADC_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr)): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADC_A_n preconditions in previous components'" & btrue);
("`ADC_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADC_A_9HL0 preconditions in previous components'" & btrue);
("`ADC_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADC_A_9IX_d0 preconditions in previous components'" & btrue);
("`ADC_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`ADC_A_9IY_d0 preconditions in previous components'" & btrue);
("`ADC_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))): dom(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(add8UCHAR: dom(add8UCHAR) +-> ran(add8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,0,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = add8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SUB_A_r preconditions in previous components'" & btrue);
("`SUB_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr)): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SUB_A_n preconditions in previous components'" & btrue);
("`SUB_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SUB_A_9HL0 preconditions in previous components'" & btrue);
("`SUB_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SUB_A_9IX_d0 preconditions in previous components'" & btrue);
("`SUB_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SUB_A_9IY_d0 preconditions in previous components'" & btrue);
("`SUB_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SBC_A_r preconditions in previous components'" & btrue);
("`SBC_A_r preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(rr): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr)): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(rgs8(rr))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SBC_A_n preconditions in previous components'" & btrue);
("`SBC_A_n preconditions in this component'" & n1: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),schar_uchar(n1)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SBC_A_9HL0 preconditions in previous components'" & btrue);
("`SBC_A_9HL0 preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SBC_A_9IX_d0 preconditions in previous components'" & btrue);
("`SBC_A_9IX_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SBC_A_9IY_d0 preconditions in previous components'" & btrue);
("`SBC_A_9IY_d0 preconditions in this component'" & desloc: SCHAR);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(bv8get(rgs8(2|->id_reg_8),0),byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CPI preconditions in previous components'" & btrue);
("`CPI preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(negative,zero,half_carry,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CPIR preconditions in previous components'" & btrue);
("`CPIR preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(negative,zero,half_carry,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`CPD preconditions in previous components'" & btrue);
("`CPD preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(negative,zero,half_carry,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CPDR preconditions in previous components'" & btrue);
("`CPDR preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE);
(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(negative,zero,half_carry,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & zero = 1);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & hvn: BYTE & lvn: BYTE & bvn: BYTE & cvn: BYTE & substract8UCHAR(0,byte_uchar(rgs8(1|->id_reg_8)),byte_uchar(mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum,negative,carry,half_carry)|->zero & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`CPL preconditions in previous components'" & btrue);
("`CPL preconditions in this component'" & btrue);
("`Local hypotheses'" & result: BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE);
(rgs8(1|->id_reg_8): dom(complement));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),1,bv8get(rgs8(2|->id_reg_8),2),1,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & result: BYTE & result = complement(rgs8(1|->id_reg_8)));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`NEG preconditions in previous components'" & btrue);
("`NEG preconditions in this component'" & btrue);
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(rgs8(1|->id_reg_8): dom(byte_uchar));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT);
(0,0,byte_uchar(rgs8(1|->id_reg_8)): dom(substract8UCHAR));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,0,byte_uchar(rgs8(1|->id_reg_8))));
(negative,zero,half_carry,carry,1,carry: dom(update_flag_reg));
("`Local hypotheses'" & sum: UCHAR & negative: BIT & carry: BIT & half_carry: BIT & zero: BIT & sum,negative,carry,half_carry,zero = substract8UCHAR(0,0,byte_uchar(rgs8(1|->id_reg_8))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`CCF preconditions in previous components'" & btrue);
("`CCF preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),bv8get(rgs8(2|->id_reg_8),4),bv8get(rgs8(2|->id_reg_8),2),0,bit_not(bv8get(rgs8(2|->id_reg_8),0)): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`SCF preconditions in previous components'" & btrue);
("`SCF preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),4: dom(bv8get));
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),2: dom(bv8get));
("`Local hypotheses'" & btrue);
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),bv8get(rgs8(2|->id_reg_8),4),bv8get(rgs8(2|->id_reg_8),2),0,1: dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`NOP preconditions in previous components'" & btrue);
("`NOP preconditions in this component'" & btrue);
("`HALT preconditions in previous components'" & btrue);
("`HALT preconditions in this component'" & btrue);
("`DI preconditions in previous components'" & btrue);
("`DI preconditions in this component'" & btrue);
("`EI preconditions in previous components'" & btrue);
("`EI preconditions in this component'" & btrue);
("`IM0 preconditions in previous components'" & btrue);
("`IM0 preconditions in this component'" & btrue);
("`IM1 preconditions in previous components'" & btrue);
("`IM1 preconditions in this component'" & btrue);
("`IM2 preconditions in previous components'" & btrue);
("`IM2 preconditions in this component'" & btrue);
("`set_pc preconditions in previous components'" & btrue);
("`set_pc preconditions in this component'" & value: USHORT);
("`get_pc preconditions in previous components'" & btrue);
("`get_pc preconditions in this component'" & btrue);
("`LD_r_r_ preconditions in previous components'" & btrue);
("`LD_r_r_ preconditions in this component'" & rr: (1..16)*{id_reg_8} & rr_: (1..16)*{id_reg_8});
("`LD_r_n_ preconditions in previous components'" & btrue);
("`LD_r_n_ preconditions in this component'" & rr: (1..16)*{id_reg_8} & n0: SCHAR);
("`LD_r_9HL0 preconditions in previous components'" & btrue);
("`LD_r_9HL0 preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & address: BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & address: BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & address: BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_r_9IX_d0 preconditions in previous components'" & btrue);
("`LD_r_9IX_d0 preconditions in this component'" & rr: (1..16)*{id_reg_8} & desloc: SCHAR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): dom(mem));
("`LD_r_9IY_d0 preconditions in previous components'" & btrue);
("`LD_r_9IY_d0 preconditions in this component'" & rr: (1..16)*{id_reg_8} & desloc: SCHAR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): dom(mem));
("`LD_9HL0_r preconditions in previous components'" & btrue);
("`LD_9HL0_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(rr): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(rr): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(rr): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rr: (1..16)*{id_reg_8});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rr: (1..16)*{id_reg_8});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rr: (1..16)*{id_reg_8});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_9IX_d0_r preconditions in previous components'" & btrue);
("`LD_9IX_d0_r preconditions in this component'" & desloc: SCHAR & rr: (1..16)*{id_reg_8} & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & rgs8(rr): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & rgs8(rr): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR & rr: (1..16)*{id_reg_8});
(0<=bv16_ushort(ix)+desloc+65536);
("`LD_9IY_d0_r preconditions in previous components'" & btrue);
("`LD_9IY_d0_r preconditions in this component'" & desloc: SCHAR & rr: (1..16)*{id_reg_8} & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & rgs8(rr): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & rgs8(rr): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR & rr: (1..16)*{id_reg_8});
(0<=bv16_ushort(iy)+desloc+65536);
("`LD_9HL0_n preconditions in previous components'" & btrue);
("`LD_9HL0_n preconditions in this component'" & n0: SCHAR & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & schar_byte(n0): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & schar_byte(n0): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & schar_byte(n0): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & n0: SCHAR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & n0: SCHAR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & n0: SCHAR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_9IX_d0_n preconditions in previous components'" & btrue);
("`LD_9IX_d0_n preconditions in this component'" & desloc: SCHAR & n0: SCHAR & (bv16_ushort(ix)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & schar_byte(n0): BYTE);
(0<=bv16_ushort(ix)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(ix)+desloc+65536) mod 65536): BV16 & schar_byte(n0): BYTE);
((bv16_ushort(ix)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR & n0: SCHAR);
(0<=bv16_ushort(ix)+desloc+65536);
("`LD_9IY_d0_n preconditions in previous components'" & btrue);
("`LD_9IY_d0_n preconditions in this component'" & desloc: SCHAR & n0: SCHAR & (bv16_ushort(iy)+desloc+65536) mod 65536: DATA_R_ADR);
("`Local hypotheses'" & btrue);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & btrue);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & schar_byte(n0): BYTE);
(0<=bv16_ushort(iy)+desloc+65536);
("`Local hypotheses'" & ushort_bv16((bv16_ushort(iy)+desloc+65536) mod 65536): BV16 & schar_byte(n0): BYTE);
((bv16_ushort(iy)+desloc+65536) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & desloc: SCHAR & n0: SCHAR);
(0<=bv16_ushort(iy)+desloc+65536);
("`LD_A_9BC0 preconditions in previous components'" & btrue);
("`LD_A_9BC0 preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`LD_A_9DE0 preconditions in previous components'" & btrue);
("`LD_A_9DE0 preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LD_A_9nn0 preconditions in previous components'" & btrue);
("`LD_A_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`LD_9BC0_A preconditions in previous components'" & btrue);
("`LD_9BC0_A preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`LD_9DE0_A preconditions in previous components'" & btrue);
("`LD_9DE0_A preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LD_9nn0_A preconditions in previous components'" & btrue);
("`LD_9nn0_A preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR);
("`Local hypotheses'" & ushort_bv16(nn): BV16);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ushort_bv16(nn): BV16 & rgs8(1|->id_reg_8): BYTE);
(1|->id_reg_8: dom(rgs8));
("`LD_A_I preconditions in previous components'" & btrue);
("`LD_A_I preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(is_negative(i_),is_zero(i_),0,iff2,0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`LD_A_R preconditions in previous components'" & btrue);
("`LD_A_R preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & btrue);
(is_negative(r_),is_zero(r_),0,iff2,0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`LD_I_A preconditions in previous components'" & btrue);
("`LD_I_A preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`LD_R_A preconditions in previous components'" & btrue);
("`LD_R_A preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`LD_dd_nn preconditions in previous components'" & btrue);
("`LD_dd_nn preconditions in this component'" & dd: (1..5)*{id_reg_16} & nn: USHORT & not(dd = 5|->id_reg_16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE);
(dd: dom(REG16_TO_REG8));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(ushort_bv16(nn): dom(bv16_byte));
("`LD_IX_nn preconditions in previous components'" & btrue);
("`LD_IX_nn preconditions in this component'" & nn: USHORT);
("`LD_IY_nn preconditions in previous components'" & btrue);
("`LD_IY_nn preconditions in this component'" & nn: USHORT);
("`LD_HL_9nn0 preconditions in previous components'" & btrue);
("`LD_HL_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`LD_dd_9nn0 preconditions in previous components'" & btrue);
("`LD_dd_9nn0 preconditions in this component'" & dd: (1..5)*{id_reg_16} & nn: USHORT & not(dd = 5|->id_reg_16));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(mem(ushort_bv16(add16USHORT(0,nn,1))),mem(ushort_bv16(nn)): dom(byte_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE);
(dd: dom(REG16_TO_REG8));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & w1 = mem(ushort_bv16(add16USHORT(0,nn,1))));
(ushort_bv16(nn): dom(mem));
("`LD_IX_9nn0 preconditions in previous components'" & btrue);
("`LD_IX_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,nn,1))),mem(ushort_bv16(nn)): dom(byte_bv16));
("`LD_IY_9nn0 preconditions in previous components'" & btrue);
("`LD_IY_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,nn,1))),mem(ushort_bv16(nn)): dom(byte_bv16));
("`LD_9nn0_HL preconditions in previous components'" & btrue);
("`LD_9nn0_HL preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_9nn0_dd preconditions in previous components'" & btrue);
("`LD_9nn0_dd preconditions in this component'" & dd: (1..5)*{id_reg_16} & not(dd = 5|->id_reg_16) & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE);
(dd: dom(REG16_TO_REG8));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd: (1..5)*{id_reg_16} & not(dd = 5|->id_reg_16) & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_9nn0_IX preconditions in previous components'" & btrue);
("`LD_9nn0_IX preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_9nn0_IY preconditions in previous components'" & btrue);
("`LD_9nn0_IY preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_SP_HL preconditions in previous components'" & btrue);
("`LD_SP_HL preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_SP_IX preconditions in previous components'" & btrue);
("`LD_SP_IX preconditions in this component'" & btrue);
("`LD_SP_IY preconditions in previous components'" & btrue);
("`LD_SP_IY preconditions in this component'" & btrue);
("`PUSH_qq preconditions in previous components'" & btrue);
("`PUSH_qq preconditions in this component'" & qq: (1..5)*{id_reg_16} & not(qq = 4|->id_reg_16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8});
(qq: dom(REG16_TO_REG8));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`PUSH_IX preconditions in previous components'" & btrue);
("`PUSH_IX preconditions in this component'" & btrue);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`PUSH_IY preconditions in previous components'" & btrue);
("`PUSH_IY preconditions in this component'" & btrue);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`POP_qq preconditions in previous components'" & btrue);
("`POP_qq preconditions in this component'" & qq: (1..5)*{id_reg_16} & not(qq = 4|->id_reg_16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8});
(qq: dom(REG16_TO_REG8));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`POP_IX preconditions in previous components'" & btrue);
("`POP_IX preconditions in this component'" & sp: BV16);
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2))): dom(byte_bv16));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`POP_IY preconditions in previous components'" & btrue);
("`POP_IY preconditions in this component'" & sp: BV16);
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2))): dom(byte_bv16));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`EX_DE_HL preconditions in previous components'" & btrue);
("`EX_DE_HL preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`EX_AF_AF_ preconditions in previous components'" & btrue);
("`EX_AF_AF_ preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(3|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(4|->id_reg_8: dom(rgs8));
("`EXX preconditions in previous components'" & btrue);
("`EXX preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(16|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(15|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(12|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(11|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(8|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(7|->id_reg_8: dom(rgs8));
("`EX_9SP0_HL preconditions in previous components'" & btrue);
("`EX_9SP0_HL preconditions in this component'" & bv16_ushort(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`EX_9SP0_IX preconditions in previous components'" & btrue);
("`EX_9SP0_IX preconditions in this component'" & bv16_ushort(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`EX_9SP0_IY preconditions in previous components'" & btrue);
("`EX_9SP0_IY preconditions in this component'" & bv16_ushort(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`LDI preconditions in previous components'" & btrue);
("`LDI preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LDIR preconditions in previous components'" & btrue);
("`LDIR preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,0,0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LDD preconditions in previous components'" & btrue);
("`LDD preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LDDR preconditions in previous components'" & btrue);
("`LDDR preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),7: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),6: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(2|->id_reg_8),0: dom(bv8get));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv8get(rgs8(2|->id_reg_8),7),bv8get(rgs8(2|->id_reg_8),6),0,0,0,bv8get(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(update_flag_reg: dom(update_flag_reg) +-> ran(update_flag_reg));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn: BYTE & lvn: BYTE & dvn: BYTE & evn: BYTE & bvn: BYTE & cvn: BYTE & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`ext_NMI preconditions in previous components'" & btrue);
("`ext_NMI preconditions in this component'" & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))): STACK_R_ADR & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR);
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE);
(ushort_bv16(pc): dom(bv16_byte));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & btrue);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))): STACK_R_ADR);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))): STACK_R_ADR);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`ext_INT preconditions in previous components'" & btrue);
("`ext_INT preconditions in this component'" & iff1 = 1 & byte_bus: 0..255 & bv16_ushort(ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE);
(ushort_bv16(pc): dom(bv16_byte));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & im = 0|->0 & (byte_bus = 199 or byte_bus = 207 or byte_bus = 215 or byte_bus = 223 or byte_bus = 231 or byte_bus = 239 or byte_bus = 247 or byte_bus = 255) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & im = 0|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(byte_bus: dom(uchar_byte));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(uchar_byte(byte_bus): dom(rotateleft));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(rotateleft(uchar_byte(byte_bus)),0: dom(bitclear));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(i_,bitclear(rotateleft(uchar_byte(byte_bus)),0): dom(byte_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(byte_bv16(i_,bitclear(rotateleft(uchar_byte(byte_bus)),0)): dom(bv16_ushort));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & pc_low: BYTE & pc_high: BYTE & bv16_byte(ushort_bv16(pc)) = pc_low|->pc_high & not(im = 0|->0) & not(im = 0|->1) & im = 1|->1 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->pc_low}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->pc_high}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & iff1 = 1 & byte_bus: 0..255);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & iff1 = 1 & byte_bus: 0..255);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`ext_RESET preconditions in previous components'" & btrue);
("`ext_RESET preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(0: dom(uchar_byte));
("`Local hypotheses'" & btrue);
(0: dom(uchar_byte));
("`Local hypotheses'" & btrue);
(255: dom(uchar_byte));
("`Local hypotheses'" & btrue);
(255: dom(uchar_byte));
("`Local hypotheses'" & btrue);
(255: dom(uchar_byte));
("`Local hypotheses'" & btrue);
(255: dom(uchar_byte));
("`Local hypotheses'" & btrue);
(uchar_byte(255),uchar_byte(255): dom(byte_bv16));
("`io_read preconditions in previous components'" & btrue);
("`io_read preconditions in this component'" & aa: (1..16)*{id_reg_8});
("`io_write preconditions in previous components'" & btrue);
("`io_write preconditions in this component'" & aa: (1..16)*{id_reg_8} & value: BYTE)

END
&

THEORY EnumerateX IS
(id_reg_8 == {a0,f0,f_0,a_0,b0,c0,b_0,c_0,d0,e0,d_0,e_0,h0,l0,h_0,l_0});
(id_reg_16 == {BC,DE,HL,SP,AF})

END
