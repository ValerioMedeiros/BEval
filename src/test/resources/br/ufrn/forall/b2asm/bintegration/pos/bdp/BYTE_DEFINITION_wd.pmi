THEORY BalanceX IS
  BYTE_DEFINITION,136,7,0,129,0,0,0;
  Properties,134,5,0,129,0,0,0;
  Assertions,2,2,0,0,0,0,0
END
&
THEORY ProofState IS
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util)
END
&
THEORY MethodList IS
  dd & ah(bt: 1..8 +-> ran(bt) & dom(bt) = 1..8 & 0<=8 => bt: seq(ran(bt))) & pr(Tac(BIT_VECTOR)) & pr(Tac(BIT_VECTOR));
  dd & eh(BYTE,_h,Goal) & pr(Tac(BIT_VECTOR));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(bit_xor,_h,Goal) & ah(bt1: BYTE & bt2: BYTE) & pr & pr & eh(BYTE,_h,Goal) & eh(BYTE_INDEX,_h,Goal) & eh(BIT,_h,Goal) & dd & ah(bt1(idx): BIT) & ah(bt1: 1..8 --> {0,1}) & ah(idx: 1..8) & pr & dd & ah(bt2(idx): BIT) & ah(idx: 1..8 => bt2: 1..8 --> {0,1}) & pr & ah(bt1(idx): BIT) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(bit_or,_h,Goal) & ah(bt1: BYTE & bt2: BYTE) & pr & pr & eh(BYTE,_h,Goal) & eh(BYTE_INDEX,_h,Goal) & eh(BIT,_h,Goal) & dd & ah(bt1(idx): BIT) & ah(bt1: 1..8 --> {0,1}) & ah(idx: 1..8) & pr & dd & ah(bt2(idx): BIT) & ah(idx: 1..8 => bt2: 1..8 --> {0,1}) & pr & ah(bt1(idx): BIT) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(bit_and,_h,Goal) & ah(bt1: BYTE & bt2: BYTE) & pr & pr & eh(BYTE,_h,Goal) & eh(BYTE_INDEX,_h,Goal) & eh(BIT,_h,Goal) & dd & ah(bt1(idx): BIT) & ah(bt1: 1..8 --> {0,1}) & ah(idx: 1..8) & pr & dd & ah(bt2(idx): BIT) & ah(idx: 1..8 => bt2: 1..8 --> {0,1}) & pr & ah(bt1(idx): BIT) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(0<=bv(1) & 0<=bv(2) & 0<=bv(3) & 0<=bv(4) & 0<=bv(5) & 0<=bv(6) & 0<=bv(7) & 0<=bv(8)) & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(BIT,_h,Goal) & eh(BYTE_INDEX,_h,Goal) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & ah(bv: BYTE) & eh(BYTE) & eh(BYTE_INDEX) & eh(BIT) & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(b1: 1..8 +-> ran(b1) & dom(b1) = 1..8 & 0<=8 => b1: seq(ran(b1))) & pr(Tac(BIT_VECTOR)) & pr(Tac(BIT_VECTOR)) & ah(b1: BYTE) & eh(BYTE,_h,Goal) & pp(rt.1) & pr & pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(3),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
